import api from "../API";
import { SoundCloudActivityCollection, SoundCloudConnection, SoundCloudUser } from "../types";
export declare class Me {
    private readonly api;
    private readonly users;
    constructor(api: api);
    /**
     * Gets your own profile, or your ID if pass in a true param.
     */
    get: <B extends boolean>(returnID?: B) => Promise<B extends true ? number : SoundCloudUser>;
    /**
     * Gets activities from your homepage.
     */
    activities: () => Promise<SoundCloudActivityCollection>;
    /**
     * Gets affiliated activities.
     */
    activitiesAffiliated: () => Promise<SoundCloudActivityCollection>;
    /**
     * Gets exclusive activities.
     */
    activitiesExclusive: () => Promise<SoundCloudActivityCollection>;
    /**
     * Gets your own activities only.
     */
    activitiesOwn: () => Promise<SoundCloudActivityCollection>;
    /**
     * Gets your app connections, id any.
     */
    connections: () => Promise<SoundCloudConnection[]>;
    /**
     * Gets a connection from its ID.
     */
    connection: (connectionID: number) => Promise<SoundCloudConnection>;
    tracks: () => Promise<import("../types").SoundCloudTrack[]>;
    comments: () => Promise<import("../types").SoundCloudComment[]>;
    favorites: () => Promise<import("../types").SoundCloudTrack[]>;
    favorite: (userResolvable: string | number) => Promise<import("../types").SoundCloudTrack>;
    followers: () => Promise<import("../types").SoundCloudUserCollection>;
    follower: (userResolvable: string | number) => Promise<SoundCloudUser>;
    followings: () => Promise<import("../types").SoundCloudUserCollection>;
    following: (userResolvable: string | number) => Promise<SoundCloudUser>;
    playlists: () => Promise<import("../types").SoundCloudPlaylist[]>;
    webProfiles: () => Promise<import("../types").SoundCloudWebProfile[]>;
}
