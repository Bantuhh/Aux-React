/// <reference types="node" />
import * as fs from "fs";
import * as stream from "stream";
import api from "../API";
import { SoundCloudTrack } from "../types";
export declare class Util {
    private readonly api;
    private readonly playlists;
    private readonly users;
    private readonly tracks;
    constructor(api: api);
    /**
     * Utility for awaiting a stream.Writable
     */
    awaitStream: (writeStream: stream.Writable) => Promise<unknown>;
    /**
     * Downloads the stream of a track.
     */
    downloadTrackStream: (songUrl: string, title: string, folder: string) => Promise<string>;
    /** Gets the title by scraping the html source */
    getTitle: (songUrl: string) => Promise<any>;
    downloadTrack: (trackResolvable: string | SoundCloudTrack, folder?: string) => Promise<string>;
    downloadTracks: (tracks: string[] | SoundCloudTrack[], dest?: string, limit?: number) => Promise<string[]>;
    downloadSearch: (query: string, dest?: string, limit?: number) => Promise<string[]>;
    downloadFavorites: (userResolvable: string | number, dest?: string, limit?: number) => Promise<string[]>;
    downloadPlaylist: (playlistResolvable: string | number, dest?: string, limit?: number) => Promise<string[]>;
    streamTrack: (trackResolvable: string | SoundCloudTrack, folder?: string) => Promise<fs.ReadStream>;
    private removeDirectory;
}
