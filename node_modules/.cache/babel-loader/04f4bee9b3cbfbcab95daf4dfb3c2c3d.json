{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionController.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/SessionController.css\";\nimport \"../../utils/spotifyInterface\";\n\nclass SessionController extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isPlaying: false,\n      currentTrack: {\n        songTitle: \"Ghost Voices (Hex Cougar Flip)\",\n        artist: \"Hex Cougar\",\n        albumImgURL: require(\"../../resources/images/GhostVoicesHex.png\")\n      }\n    };\n\n    this.playButtonPress = () => {\n      if (this.state.isPlaying) {\n        this.setState({\n          isPlaying: false\n        });\n        console.log(this.state.isPlaying);\n        pause(global.spotifyAccessToken);\n      } else {\n        this.setState({\n          isPlaying: true\n        });\n        console.log(this.state.isPlaying);\n        play(global.spotifyAccessToken);\n      }\n    };\n  }\n\n  // Spotify Web Api funcs\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controllerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"currentTrackPic\",\n      src: this.state.currentTrack.albumImgURL,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controllerButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"restartButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"playButton\",\n      style: {\n        background: this.state.isPlaying ? \"url(\" + require(\"../../resources/images/PauseButton.png\") + \")\" : \"url(\" + require(\"../../resources/images/PlayButton.png\") + \")\",\n        left: this.state.isPlaying ? \"-5px\" : \"\"\n      },\n      onClick: this.playButtonPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skipButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"songTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, this.state.currentTrack.songTitle), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"songArtist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, this.state.currentTrack.artist)));\n  }\n\n}\n\nexport default SessionController;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionController.jsx"],"names":["React","Component","SessionController","state","isPlaying","currentTrack","songTitle","artist","albumImgURL","require","playButtonPress","setState","console","log","pause","global","spotifyAccessToken","play","render","background","left"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,oCAAP;AAEA,OAAO,8BAAP;;AAEA,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCE,KADwC,GAChC;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,YAAY,EAAE;AACZC,QAAAA,SAAS,EAAE,gCADC;AAEZC,QAAAA,MAAM,EAAE,YAFI;AAGZC,QAAAA,WAAW,EAAEC,OAAO,CAAC,2CAAD;AAHR;AAFR,KADgC;;AAAA,SAUxCC,eAVwC,GAUtB,MAAM;AACtB,UAAI,KAAKP,KAAL,CAAWC,SAAf,EAA0B;AACxB,aAAKO,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE;AAAb,SAAd;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,SAAvB;AACAU,QAAAA,KAAK,CAACC,MAAM,CAACC,kBAAR,CAAL;AACD,OAJD,MAIO;AACL,aAAKL,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE;AAAb,SAAd;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,SAAvB;AACAa,QAAAA,IAAI,CAACF,MAAM,CAACC,kBAAR,CAAJ;AACD;AACF,KApBuC;AAAA;;AAsBxC;AAEAE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,GAAG,EAAE,KAAKf,KAAL,CAAWE,YAAX,CAAwBG,WAF/B;AAGE,MAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAE;AACLW,QAAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWC,SAAX,GACR,SACAK,OAAO,CAAC,wCAAD,CADP,GAEA,GAHQ,GAIR,SACAA,OAAO,CAAC,uCAAD,CADP,GAEA,GAPC;AAQLW,QAAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AARjC,OAFT;AAYE,MAAA,OAAO,EAAE,KAAKM,eAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAeE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CALF,eAsBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB,KAAKP,KAAL,CAAWE,YAAX,CAAwBC,SAA3C,CADF,eAEE;AAAG,MAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,KAAKH,KAAL,CAAWE,YAAX,CAAwBE,MAA5C,CAFF,CAtBF,CADF;AA6BD;;AAtDuC;;AAyD1C,eAAeL,iBAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/SessionController.css\";\n\nimport \"../../utils/spotifyInterface\";\n\nclass SessionController extends Component {\n  state = {\n    isPlaying: false,\n    currentTrack: {\n      songTitle: \"Ghost Voices (Hex Cougar Flip)\",\n      artist: \"Hex Cougar\",\n      albumImgURL: require(\"../../resources/images/GhostVoicesHex.png\"),\n    },\n  };\n\n  playButtonPress = () => {\n    if (this.state.isPlaying) {\n      this.setState({ isPlaying: false });\n      console.log(this.state.isPlaying);\n      pause(global.spotifyAccessToken);\n    } else {\n      this.setState({ isPlaying: true });\n      console.log(this.state.isPlaying);\n      play(global.spotifyAccessToken);\n    }\n  };\n\n  // Spotify Web Api funcs\n\n  render() {\n    return (\n      <div className=\"controllerDiv\">\n        <img\n          className=\"currentTrackPic\"\n          src={this.state.currentTrack.albumImgURL}\n          alt=\"\"></img>\n        <div className=\"controllerButtons\">\n          <button className=\"restartButton\"></button>\n          <button\n            className=\"playButton\"\n            style={{\n              background: this.state.isPlaying\n                ? \"url(\" +\n                  require(\"../../resources/images/PauseButton.png\") +\n                  \")\"\n                : \"url(\" +\n                  require(\"../../resources/images/PlayButton.png\") +\n                  \")\",\n              left: this.state.isPlaying ? \"-5px\" : \"\",\n            }}\n            onClick={this.playButtonPress}></button>\n          <button className=\"skipButton\"></button>\n        </div>\n        <div className=\"songText\">\n          <p id=\"songTitle\">{this.state.currentTrack.songTitle}</p>\n          <p id=\"songArtist\">{this.state.currentTrack.artist}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SessionController;\n"]},"metadata":{},"sourceType":"module"}