{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionWeb.jsx\";\nimport React, { Component, useEffect } from \"react\";\nimport { useSpotifyWebPlaybackSdk } from \"use-spotify-web-playback-sdk\";\nimport \"../../styles/SessionWeb.css\";\nimport SessionController from \"./sessionController\";\nimport SessionQueue from \"./sessionQueue\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify(); // const accessToken = spotifyWebApi.getAccessToken().then(\n//   (response) => {\n//     console.log(response);\n//     return response;\n//   },\n//   (reason) => {\n//     console.log(reason);\n//     return reason;\n//   }\n// );\n// const {\n//   Script: WebPlaybackSdkScript,\n//   deviceId,\n//   connect: connectWebPlaybackSdk,\n//   player, // https://developer.spotify.com/documentation/web-playback-sdk/reference/#api-spotify-player\n//   isReady,\n// } = useSpotifyWebPlaybackSdk({\n//   name: \"My Spotify Player\", // Device that shows up in the spotify devices list\n//   getOAuthToken: () => Promise.resolve(accessToken), // Wherever you get your access token from\n//   onPlayerStateChanged: (playerState) => {\n//     console.log(\"player state changed:\", playerState);\n//   },\n// });\n// React.useEffect(() => {\n//   if (isReady) {\n//     player.connect();\n//   }\n// }, [isReady]);\n\nclass SessionWeb extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Suspense, {\n      fallback: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(WebPlaybackSdkScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sessionFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sessionMiddle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(SessionController, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(SessionQueue, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sessionRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SessionWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionWeb.jsx"],"names":["React","Component","useEffect","useSpotifyWebPlaybackSdk","SessionController","SessionQueue","Spotify","spotifyWebApi","SessionWeb","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,SAASC,wBAAT,QAAyC,8BAAzC;AAEA,OAAO,6BAAP;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAME,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB,EADyB;AAAA;;AAGjCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,CADF;AAaD;;AAjBgC;;AAoBnC,eAAeF,UAAf","sourcesContent":["import React, { Component, useEffect } from \"react\";\n\nimport { useSpotifyWebPlaybackSdk } from \"use-spotify-web-playback-sdk\";\n\nimport \"../../styles/SessionWeb.css\";\n\nimport SessionController from \"./sessionController\";\nimport SessionQueue from \"./sessionQueue\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\n// const accessToken = spotifyWebApi.getAccessToken().then(\n//   (response) => {\n//     console.log(response);\n//     return response;\n//   },\n//   (reason) => {\n//     console.log(reason);\n//     return reason;\n//   }\n// );\n\n// const {\n//   Script: WebPlaybackSdkScript,\n//   deviceId,\n//   connect: connectWebPlaybackSdk,\n//   player, // https://developer.spotify.com/documentation/web-playback-sdk/reference/#api-spotify-player\n//   isReady,\n// } = useSpotifyWebPlaybackSdk({\n//   name: \"My Spotify Player\", // Device that shows up in the spotify devices list\n//   getOAuthToken: () => Promise.resolve(accessToken), // Wherever you get your access token from\n//   onPlayerStateChanged: (playerState) => {\n//     console.log(\"player state changed:\", playerState);\n//   },\n// });\n\n// React.useEffect(() => {\n//   if (isReady) {\n//     player.connect();\n//   }\n// }, [isReady]);\n\nclass SessionWeb extends Component {\n  state = {};\n\n  render() {\n    return (\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <WebPlaybackSdkScript>\n          <div className=\"sessionFlex\">\n            <div className=\"sessionMiddle\">\n              <SessionController></SessionController>\n              <SessionQueue></SessionQueue>\n            </div>\n            <div className=\"sessionRight\"></div>\n          </div>\n        </WebPlaybackSdkScript>\n      </React.Suspense>\n    );\n  }\n}\n\nexport default SessionWeb;\n"]},"metadata":{},"sourceType":"module"}