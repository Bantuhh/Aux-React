{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/SearchWeb.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport SearchResults from \"./searchResults\";\nimport SearchIcon from \"../../resources/images/SearchIcon.png\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SearchWeb extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trackSearchResults: global.spotifyTrackSearchResults,\n      spotifySearch: Object.keys(global.spotifyTrackSearchResults).length == 0 ? false : true,\n      lastSpotifySearchQuery: global.lastSpotifySearchQuery\n    };\n\n    this.createNotification = type => {\n      console.log(\"GOT TO CREATE NOTIFICATION\");\n\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(\"Info message\");\n          break;\n\n        case \"success\":\n          NotificationManager.success(\"Success message\", \"Title here\");\n          break;\n\n        case \"warning\":\n          NotificationManager.warning(\"Warning message\", \"Close after 3000ms\", 3000);\n          break;\n\n        case \"error\":\n          NotificationManager.error(\"Make sure you are logged into your Spotify\", \"Error!\", 5000, () => {//alert(\"callback\");\n          });\n          break;\n      }\n\n      return () => {};\n    };\n\n    this.spotifySearchTrack = () => {\n      var query = document.getElementById(\"searchQuery\").value;\n      spotifyWebApi.searchTracks(query).then(response => {\n        console.log(response);\n        this.setState({\n          trackSearchResults: response.tracks.items,\n          spotifySearch: true\n        });\n        global.spotifyTrackSearchResults = response.tracks.items;\n        global.lastSpotifySearchQuery = query;\n      }, reason => {\n        console.log(\"GOT TO ERROR\");\n        this.createNotification(\"error\");\n        console.error(reason); // Error!\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"searchFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchMiddle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchQueryDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchInputDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"searchIcon\",\n      src: SearchIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchQuery\",\n      placeholder: this.state.lastSpotifySearchQuery === \"\" ? \"Search a song or artist..\" : this.state.lastSpotifySearchQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"searchButtonDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"spotifySearchBtn\",\n      onClick: this.spotifySearchTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      id: \"searchDivHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.spotifySearch ? \"Spotify Search\" : \"Enter a query and click desired platform to search..\")), React.createElement(SearchResults, {\n      trackSearchResults: this.state.trackSearchResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"searchRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchWeb.jsx"],"names":["React","Component","NotificationContainer","NotificationManager","SearchResults","SearchIcon","Spotify","spotifyWebApi","SearchWeb","state","trackSearchResults","global","spotifyTrackSearchResults","spotifySearch","Object","keys","length","lastSpotifySearchQuery","createNotification","type","console","log","info","success","warning","error","spotifySearchTrack","query","document","getElementById","value","searchTracks","then","response","setState","tracks","items","reason","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/SearchWeb.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\nimport SearchResults from \"./searchResults\";\n\nimport SearchIcon from \"../../resources/images/SearchIcon.png\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SearchWeb extends Component {\n  state = {\n    trackSearchResults: global.spotifyTrackSearchResults,\n    spotifySearch:\n      Object.keys(global.spotifyTrackSearchResults).length == 0 ? false : true,\n    lastSpotifySearchQuery: global.lastSpotifySearchQuery,\n  };\n\n  createNotification = (type) => {\n    console.log(\"GOT TO CREATE NOTIFICATION\");\n    switch (type) {\n      case \"info\":\n        NotificationManager.info(\"Info message\");\n        break;\n      case \"success\":\n        NotificationManager.success(\"Success message\", \"Title here\");\n        break;\n      case \"warning\":\n        NotificationManager.warning(\n          \"Warning message\",\n          \"Close after 3000ms\",\n          3000\n        );\n        break;\n      case \"error\":\n        NotificationManager.error(\n          \"Make sure you are logged into your Spotify\",\n          \"Error!\",\n          5000,\n          () => {\n            //alert(\"callback\");\n          }\n        );\n        break;\n    }\n    return () => {};\n  };\n\n  spotifySearchTrack = () => {\n    var query = document.getElementById(\"searchQuery\").value;\n    spotifyWebApi.searchTracks(query).then(\n      (response) => {\n        console.log(response);\n        this.setState({\n          trackSearchResults: response.tracks.items,\n          spotifySearch: true,\n        });\n\n        global.spotifyTrackSearchResults = response.tracks.items;\n        global.lastSpotifySearchQuery = query;\n      },\n      (reason) => {\n        console.log(\"GOT TO ERROR\");\n        this.createNotification(\"error\");\n        console.error(reason); // Error!\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"searchFlex\">\n        <div className=\"searchMiddle\">\n          <div className=\"searchQueryDiv\">\n            <div className=\"searchInputDiv\">\n              <img className=\"searchIcon\" src={SearchIcon} alt=\"\"></img>\n              <input\n                type=\"text\"\n                id=\"searchQuery\"\n                placeholder={\n                  this.state.lastSpotifySearchQuery === \"\"\n                    ? \"Search a song or artist..\"\n                    : this.state.lastSpotifySearchQuery\n                }></input>\n            </div>\n            <div className=\"searchButtonDiv\">\n              <button\n                id=\"spotifySearchBtn\"\n                onClick={this.spotifySearchTrack}></button>\n            </div>\n            <p id=\"searchDivHeader\">\n              {this.state.spotifySearch\n                ? \"Spotify Search\"\n                : \"Enter a query and click desired platform to search..\"}\n            </p>\n          </div>\n          <SearchResults\n            trackSearchResults={this.state.trackSearchResults}></SearchResults>\n          <NotificationContainer />\n        </div>\n        <div className=\"searchRight\"></div>\n      </div>\n    );\n  }\n}\n\nexport default SearchWeb;\n"]},"metadata":{},"sourceType":"module"}