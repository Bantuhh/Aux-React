{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchItem.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/searchItem.css\";\nimport { formatYTTitle } from \"../../utils/youtubeInterface\";\n\nclass SearchItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      songInfo,\n      vidInfo,\n      selectedPlatform\n    } = this.props;\n    var vidThumbnailPath = \"\";\n    var albumImgPath = \"\";\n    var artistString = \"\";\n    var numArtists = 0; // Load fields depending on selected platform\n\n    if (selectedPlatform === \"Youtube\") {\n      vidThumbnailPath = vidInfo.snippet.thumbnails.default.url;\n    } else if (selectedPlatform === \"Spotify\") {\n      albumImgPath = songInfo.album.images[2].url;\n\n      for (var key in Object.keys(songInfo.artists)) {\n        var artist = songInfo.artists[key];\n\n        if (numArtists > 0) {\n          artistString = artistString + \", \" + artist.name;\n        } else {\n          artistString = artist.name;\n        }\n\n        numArtists += 1;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchItemDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, selectedPlatform === \"Youtube\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchItemDivInner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"playNow\",\n      onClick: () => this.props.playSongNow(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      src: vidThumbnailPath,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songInfoDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"songTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, formatYTTitle(vidInfo.snippet.title)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"songArtist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, vidInfo.snippet.channelTitle)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songOptionsDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"songOptions\",\n      onClick: () => this.props.showContentOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchItemDivInner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"playNow\",\n      onClick: () => this.props.playSongNow(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"albumImg\",\n      src: albumImgPath,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songInfoDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"songTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, songInfo.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"songArtist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, artistString)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songOptionsDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"songOptions\",\n      onClick: () => this.props.showContentOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default SearchItem;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchItem.jsx"],"names":["React","Component","formatYTTitle","SearchItem","state","render","songInfo","vidInfo","selectedPlatform","props","vidThumbnailPath","albumImgPath","artistString","numArtists","snippet","thumbnails","default","url","album","images","key","Object","keys","artists","artist","name","playSongNow","title","channelTitle","showContentOptions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/searchItem.css\";\nimport { formatYTTitle } from \"../../utils/youtubeInterface\";\n\nclass SearchItem extends Component {\n  state = {};\n  render() {\n    const { songInfo, vidInfo, selectedPlatform } = this.props;\n\n    var vidThumbnailPath = \"\";\n\n    var albumImgPath = \"\";\n    var artistString = \"\";\n    var numArtists = 0;\n\n    // Load fields depending on selected platform\n    if (selectedPlatform === \"Youtube\") {\n      vidThumbnailPath = vidInfo.snippet.thumbnails.default.url;\n    } else if (selectedPlatform === \"Spotify\") {\n      albumImgPath = songInfo.album.images[2].url;\n\n      for (var key in Object.keys(songInfo.artists)) {\n        var artist = songInfo.artists[key];\n\n        if (numArtists > 0) {\n          artistString = artistString + \", \" + artist.name;\n        } else {\n          artistString = artist.name;\n        }\n        numArtists += 1;\n      }\n    }\n\n    return (\n      <div className=\"searchItemDiv\">\n        {selectedPlatform === \"Youtube\" ? (\n          <div className=\"searchItemDivInner\">\n            <button\n              className=\"playNow\"\n              onClick={() => this.props.playSongNow()}></button>\n            <img className=\"albumImg\" src={vidThumbnailPath} alt=\"\"></img>\n            <div className=\"songInfoDiv\">\n              <p className=\"songTitle\">\n                {formatYTTitle(vidInfo.snippet.title)}\n              </p>\n              <p className=\"songArtist\">{vidInfo.snippet.channelTitle}</p>\n            </div>\n            <div className=\"songOptionsDiv\">\n              <button\n                className=\"songOptions\"\n                onClick={() => this.props.showContentOptions()}></button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"searchItemDivInner\">\n            <button\n              className=\"playNow\"\n              onClick={() => this.props.playSongNow()}></button>\n            <img className=\"albumImg\" src={albumImgPath} alt=\"\"></img>\n            <div className=\"songInfoDiv\">\n              <p className=\"songTitle\">{songInfo.name}</p>\n              <p className=\"songArtist\">{artistString}</p>\n            </div>\n            <div className=\"songOptionsDiv\">\n              <button\n                className=\"songOptions\"\n                onClick={() => this.props.showContentOptions()}></button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchItem;\n"]},"metadata":{},"sourceType":"module"}