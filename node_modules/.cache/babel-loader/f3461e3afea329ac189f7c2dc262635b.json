{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/SearchWeb.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport SearchResults from \"./searchResults\";\nimport SearchIcon from \"../../resources/images/SearchIcon.png\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SearchWeb extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.createNotification = type => {\n      console.log(\"GOT TO CREATE NOTIFICATION\");\n      NotificationManager.error(\"Error: Make sure you are logged into your Spotify\", \"Click me!\", 5000, () => {\n        alert(\"callback\");\n      });\n      return () => {\n        switch (type) {\n          case \"info\":\n            NotificationManager.info(\"Info message\");\n            break;\n\n          case \"success\":\n            NotificationManager.success(\"Success message\", \"Title here\");\n            break;\n\n          case \"warning\":\n            NotificationManager.warning(\"Warning message\", \"Close after 3000ms\", 3000);\n            break;\n\n          case \"error\":\n            break;\n        }\n      };\n    };\n\n    this.spotifySearchTrack = () => {\n      var query = document.getElementById(\"searchQuery\").value;\n      spotifyWebApi.searchTracks(query).then(response => {\n        console.log(response);\n      }, reason => {\n        console.log(\"GOT TO ERROR\");\n        this.createNotification(\"error\");\n        console.error(reason); // Error!\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"searchFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchMiddle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchQueryDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"searchIcon\",\n      src: SearchIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"searchInputDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchQuery\",\n      placeholder: \"Search a song or artist..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"searchButtonDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"spotifySearchBtn\",\n      onClick: this.spotifySearchTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(SearchResults, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"searchRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchWeb.jsx"],"names":["React","Component","NotificationContainer","NotificationManager","SearchResults","SearchIcon","Spotify","spotifyWebApi","SearchWeb","state","createNotification","type","console","log","error","alert","info","success","warning","spotifySearchTrack","query","document","getElementById","value","searchTracks","then","response","reason","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/SearchWeb.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\nimport SearchResults from \"./searchResults\";\n\nimport SearchIcon from \"../../resources/images/SearchIcon.png\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SearchWeb extends Component {\n  state = {};\n\n  createNotification = (type) => {\n    console.log(\"GOT TO CREATE NOTIFICATION\");\n    NotificationManager.error(\n      \"Error: Make sure you are logged into your Spotify\",\n      \"Click me!\",\n      5000,\n      () => {\n        alert(\"callback\");\n      }\n    );\n    return () => {\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(\"Info message\");\n          break;\n        case \"success\":\n          NotificationManager.success(\"Success message\", \"Title here\");\n          break;\n        case \"warning\":\n          NotificationManager.warning(\n            \"Warning message\",\n            \"Close after 3000ms\",\n            3000\n          );\n          break;\n        case \"error\":\n          break;\n      }\n    };\n  };\n  spotifySearchTrack = () => {\n    var query = document.getElementById(\"searchQuery\").value;\n    spotifyWebApi.searchTracks(query).then(\n      (response) => {\n        console.log(response);\n      },\n      (reason) => {\n        console.log(\"GOT TO ERROR\");\n        this.createNotification(\"error\");\n        console.error(reason); // Error!\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"searchFlex\">\n        <div className=\"searchMiddle\">\n          <div className=\"searchQueryDiv\">\n            <img className=\"searchIcon\" src={SearchIcon} alt=\"\"></img>\n            <div className=\"searchInputDiv\">\n              <input\n                type=\"text\"\n                id=\"searchQuery\"\n                placeholder=\"Search a song or artist..\"></input>\n            </div>\n            <div className=\"searchButtonDiv\">\n              <button\n                id=\"spotifySearchBtn\"\n                onClick={this.spotifySearchTrack}></button>\n            </div>\n          </div>\n          <SearchResults></SearchResults>\n          <NotificationContainer />\n        </div>\n        <div className=\"searchRight\"></div>\n      </div>\n    );\n  }\n}\n\nexport default SearchWeb;\n"]},"metadata":{},"sourceType":"module"}