{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionController.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/SessionController.css\";\nimport { SessionContext } from \"../../session-context\";\nimport { play, pause, playURI } from \"../../utils/spotifyInterface\";\nimport { popQueue } from \"../../utils/queueInterface\";\nimport spotifyIcon from \"../../resources/images/Spotify.png\";\nimport youtubeIcon from \"../../resources/images/Youtube.png\";\n\nclass SessionController extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isPlaying: global.isContentPlaying\n    };\n\n    this.playButtonPress = () => {\n      if (global.isContentPlaying) {\n        global.isContentPlaying = false;\n        this.setState({\n          isPlaying: false\n        }); // Check Platform\n\n        if (global.currentlyPlaying[0] === \"Youtube\") {\n          global.youtubePlayer.pauseVideo();\n        } else if (global.currentlyPlaying[0] === \"Spotify\") {\n          pause(global.spotifyAccessToken);\n        }\n      } else {\n        global.isContentPlaying = true;\n        this.setState({\n          isPlaying: true\n        }); // Check Platform\n\n        if (global.currentlyPlaying[0] === \"Youtube\") {\n          global.youtubePlayer.playVideo();\n        } else if (global.currentlyPlaying[0] === \"Spotify\") {\n          play(global.spotifyAccessToken);\n        }\n      }\n    };\n\n    this.skipPressed = () => {\n      if (global.sessionQueue.length === 0) {\n        console.log(\"queue empty\");\n        return;\n      } // Pop Queue\n\n\n      var upNext = popQueue(); // Read next song and determine platform\n\n      if (upNext[0] === \"Spotify\") {\n        var songURI = upNext[1][\"uri\"]; // Pause Youtube if it was playing\n\n        global.youtubePlayer.pauseVideo();\n        playURI(songURI, global.spotifyAccessToken);\n      } else if (upNext[0] === \"Youtube\") {\n        // Pause Spotify if it was playing\n        pause(global.spotifyAccessToken);\n        global.youtubePlayer.loadVideoById(upNext[1].id.videoId, 0);\n      }\n\n      global.isContentPlaying = true;\n      global.currentlyPlaying = upNext;\n      this.context.updateSessionQueue(global.sessionQueue);\n    };\n\n    this.restartPressed = () => {\n      var songInfo = global.currentlyPlaying[1];\n\n      if (global.currentlyPlaying[0] === \"Youtube\") {\n        global.youtubePlayer.loadVideoById(songInfo.id.videoId, 0);\n      } else if (global.currentlyPlaying[1] === \"Spotify\") {\n        const songURI = songInfo[\"uri\"];\n        playURI(songURI, global.spotifyAccessToken);\n      }\n    };\n\n    this.formatArtistString = artistObj => {\n      var artistString = \"\";\n      var numArtists = 0;\n\n      for (var key in Object.keys(artistObj)) {\n        var artist = artistObj[key];\n\n        if (numArtists > 0) {\n          artistString = artistString + \", \" + artist.name;\n        } else {\n          artistString = artist.name;\n        }\n\n        numArtists += 1;\n      }\n\n      return artistString;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controllerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"currentTrackPic\",\n      src: global.currentlyPlaying === \"\" ? \"\" : global.currentlyPlaying[0] === \"Youtube\" ? global.currentlyPlaying[1].snippet.thumbnails.high.url : global.currentlyPlaying[1].album.images[0].url,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controllerButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"restartButton\",\n      onClick: this.restartPressed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"playButton\",\n      style: {\n        background: global.isContentPlaying ? \"url(\" + require(\"../../resources/images/PauseButton.png\") + \")\" : \"url(\" + require(\"../../resources/images/PlayButton.png\") + \")\",\n        left: this.state.isPlaying ? \"-5px\" : \"\"\n      },\n      onClick: this.playButtonPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"skipButton\",\n      onClick: this.skipPressed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"songText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TitleandPlatform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"songTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, global.currentlyPlaying === \"\" ? \"Nothings playing!\" : global.currentlyPlaying[0] === \"Youtube\" ? global.currentlyPlaying[1].snippet.title : global.currentlyPlaying[1].name), global.currentlyPlaying[0] === \"Youtube\" ? /*#__PURE__*/React.createElement(\"img\", {\n      src: youtubeIcon,\n      alt: \"\",\n      className: \"youtubeIconCP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }) : global.currentlyPlaying[0] === \"Spotify\" ? /*#__PURE__*/React.createElement(\"img\", {\n      src: spotifyIcon,\n      alt: \"\",\n      className: \"spotifyIconCP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }) : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"songArtist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, global.currentlyPlaying === \"\" ? \"Search a song or choose from your Library\" : global.currentlyPlaying[0] === \"Youtube\" ? global.currentlyPlaying[1].snippet.channelTitle : this.formatArtistString(global.currentlyPlaying[1].artists))));\n  }\n\n}\n\nSessionController.contextType = SessionContext;\nexport default SessionController;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionController.jsx"],"names":["React","Component","SessionContext","play","pause","playURI","popQueue","spotifyIcon","youtubeIcon","SessionController","state","isPlaying","global","isContentPlaying","playButtonPress","setState","currentlyPlaying","youtubePlayer","pauseVideo","spotifyAccessToken","playVideo","skipPressed","sessionQueue","length","console","log","upNext","songURI","loadVideoById","id","videoId","context","updateSessionQueue","restartPressed","songInfo","formatArtistString","artistObj","artistString","numArtists","key","Object","keys","artist","name","render","snippet","thumbnails","high","url","album","images","background","require","left","title","channelTitle","artists","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/SessionController.css\";\n\nimport { SessionContext } from \"../../session-context\";\n\nimport { play, pause, playURI } from \"../../utils/spotifyInterface\";\n\nimport { popQueue } from \"../../utils/queueInterface\";\n\nimport spotifyIcon from \"../../resources/images/Spotify.png\";\nimport youtubeIcon from \"../../resources/images/Youtube.png\";\n\nclass SessionController extends Component {\n  state = {\n    isPlaying: global.isContentPlaying,\n  };\n\n  playButtonPress = () => {\n    if (global.isContentPlaying) {\n      global.isContentPlaying = false;\n      this.setState({ isPlaying: false });\n      // Check Platform\n      if (global.currentlyPlaying[0] === \"Youtube\") {\n        global.youtubePlayer.pauseVideo();\n      } else if (global.currentlyPlaying[0] === \"Spotify\") {\n        pause(global.spotifyAccessToken);\n      }\n    } else {\n      global.isContentPlaying = true;\n      this.setState({ isPlaying: true });\n      // Check Platform\n      if (global.currentlyPlaying[0] === \"Youtube\") {\n        global.youtubePlayer.playVideo();\n      } else if (global.currentlyPlaying[0] === \"Spotify\") {\n        play(global.spotifyAccessToken);\n      }\n    }\n  };\n\n  skipPressed = () => {\n    if (global.sessionQueue.length === 0) {\n      console.log(\"queue empty\");\n      return;\n    }\n\n    // Pop Queue\n    var upNext = popQueue();\n\n    // Read next song and determine platform\n    if (upNext[0] === \"Spotify\") {\n      var songURI = upNext[1][\"uri\"];\n      // Pause Youtube if it was playing\n      global.youtubePlayer.pauseVideo();\n      playURI(songURI, global.spotifyAccessToken);\n    } else if (upNext[0] === \"Youtube\") {\n      // Pause Spotify if it was playing\n      pause(global.spotifyAccessToken);\n      global.youtubePlayer.loadVideoById(upNext[1].id.videoId, 0);\n    }\n\n    global.isContentPlaying = true;\n    global.currentlyPlaying = upNext;\n\n    this.context.updateSessionQueue(global.sessionQueue);\n  };\n\n  restartPressed = () => {\n    var songInfo = global.currentlyPlaying[1];\n\n    if (global.currentlyPlaying[0] === \"Youtube\") {\n      global.youtubePlayer.loadVideoById(songInfo.id.videoId, 0);\n    } else if (global.currentlyPlaying[1] === \"Spotify\") {\n      const songURI = songInfo[\"uri\"];\n      playURI(songURI, global.spotifyAccessToken);\n    }\n  };\n\n  formatArtistString = (artistObj) => {\n    var artistString = \"\";\n    var numArtists = 0;\n\n    for (var key in Object.keys(artistObj)) {\n      var artist = artistObj[key];\n\n      if (numArtists > 0) {\n        artistString = artistString + \", \" + artist.name;\n      } else {\n        artistString = artist.name;\n      }\n      numArtists += 1;\n    }\n\n    return artistString;\n  };\n\n  render() {\n    return (\n      <div className=\"controllerDiv\">\n        <img\n          className=\"currentTrackPic\"\n          src={\n            global.currentlyPlaying === \"\"\n              ? \"\"\n              : global.currentlyPlaying[0] === \"Youtube\"\n              ? global.currentlyPlaying[1].snippet.thumbnails.high.url\n              : global.currentlyPlaying[1].album.images[0].url\n          }\n          alt=\"\"></img>\n        <div className=\"controllerButtons\">\n          <button\n            className=\"restartButton\"\n            onClick={this.restartPressed}></button>\n          <button\n            className=\"playButton\"\n            style={{\n              background: global.isContentPlaying\n                ? \"url(\" +\n                  require(\"../../resources/images/PauseButton.png\") +\n                  \")\"\n                : \"url(\" +\n                  require(\"../../resources/images/PlayButton.png\") +\n                  \")\",\n              left: this.state.isPlaying ? \"-5px\" : \"\",\n            }}\n            onClick={this.playButtonPress}></button>\n          <button className=\"skipButton\" onClick={this.skipPressed}></button>\n        </div>\n        <div className=\"songText\">\n          <div className=\"TitleandPlatform\">\n            <p id=\"songTitle\">\n              {global.currentlyPlaying === \"\"\n                ? \"Nothings playing!\"\n                : global.currentlyPlaying[0] === \"Youtube\"\n                ? global.currentlyPlaying[1].snippet.title\n                : global.currentlyPlaying[1].name}\n            </p>\n            {global.currentlyPlaying[0] === \"Youtube\" ? (\n              <img src={youtubeIcon} alt=\"\" className=\"youtubeIconCP\"></img>\n            ) : global.currentlyPlaying[0] === \"Spotify\" ? (\n              <img src={spotifyIcon} alt=\"\" className=\"spotifyIconCP\"></img>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <p id=\"songArtist\">\n            {global.currentlyPlaying === \"\"\n              ? \"Search a song or choose from your Library\"\n              : global.currentlyPlaying[0] === \"Youtube\"\n              ? global.currentlyPlaying[1].snippet.channelTitle\n              : this.formatArtistString(global.currentlyPlaying[1].artists)}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nSessionController.contextType = SessionContext;\n\nexport default SessionController;\n"]},"metadata":{},"sourceType":"module"}