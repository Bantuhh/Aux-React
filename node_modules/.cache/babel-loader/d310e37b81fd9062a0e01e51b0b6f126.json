{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/library/libraryResults.jsx\";\nimport React, { Component } from \"react\";\nimport \"./LibraryResults.css\";\nimport LibraryItem from \"./libraryItem\";\nimport PlaylistItem from \"./playlistItem\";\n\nclass LibraryResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      selectedTab,\n      libraryPullResults,\n      showingPlaylistContent\n    } = this.props;\n    var libraryPullResultsArray = [];\n\n    for (var key in libraryPullResults) {\n      libraryPullResultsArray.push(libraryPullResults[key]);\n    } //{showingPlaylistContent ? \"playlistContentDiv\" : \"libraryDiv\"}\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"libraryDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, selectedTab === \"Favorites\" ? libraryPullResultsArray.map(item => /*#__PURE__*/React.createElement(LibraryItem, {\n      key: item.id,\n      songInfo: item,\n      addSongToQueue: () => this.props.addSongToQueue(\"Spotify\", Object.assign({}, item).track),\n      playSongNow: () => this.props.playSongNow(Object.assign({}, item)),\n      showSongOptions: () => this.props.showSongOptions(Object.assign({}, item)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    })) : libraryPullResultsArray.map(item => /*#__PURE__*/React.createElement(PlaylistItem, {\n      playlistInfo: item,\n      showPlaylist: () => this.props.showPlaylist(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default LibraryResults;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/library/libraryResults.jsx"],"names":["React","Component","LibraryItem","PlaylistItem","LibraryResults","state","render","selectedTab","libraryPullResults","showingPlaylistContent","props","libraryPullResultsArray","key","push","map","item","id","addSongToQueue","Object","assign","track","playSongNow","showSongOptions","showPlaylist"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,sBAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCI,KADqC,GAC7B,EAD6B;AAAA;;AAGrCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,kBAAf;AAAmCC,MAAAA;AAAnC,QAA8D,KAAKC,KAAzE;AAEA,QAAIC,uBAAuB,GAAG,EAA9B;;AACA,SAAK,IAAIC,GAAT,IAAgBJ,kBAAhB,EAAoC;AAClCG,MAAAA,uBAAuB,CAACE,IAAxB,CAA6BL,kBAAkB,CAACI,GAAD,CAA/C;AACD,KANM,CAOP;;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,WAAW,KAAK,WAAhB,GACGI,uBAAuB,CAACG,GAAxB,CAA6BC,IAAD,iBAC1B,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,QAAQ,EAAED,IAFZ;AAGE,MAAA,cAAc,EAAE,MACd,KAAKL,KAAL,CAAWO,cAAX,CACE,SADF,EAEEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwBK,KAF1B,CAJJ;AASE,MAAA,WAAW,EAAE,MACX,KAAKV,KAAL,CAAWW,WAAX,CAAuBH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,CAAvB,CAVJ;AAYE,MAAA,eAAe,EAAE,MACf,KAAKL,KAAL,CAAWY,eAAX,CAA2BJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,CAA3B,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADH,GAmBGJ,uBAAuB,CAACG,GAAxB,CAA6BC,IAAD,iBAC1B,oBAAC,YAAD;AACE,MAAA,YAAY,EAAEA,IADhB;AAEE,MAAA,YAAY,EAAE,MAAM,KAAKL,KAAL,CAAWa,YAAX,CAAwBR,IAAxB,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApBN,CADF;AA6BD;;AAxCoC;;AA2CvC,eAAeX,cAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./LibraryResults.css\";\n\nimport LibraryItem from \"./libraryItem\";\n\nimport PlaylistItem from \"./playlistItem\";\n\nclass LibraryResults extends Component {\n  state = {};\n\n  render() {\n    const { selectedTab, libraryPullResults, showingPlaylistContent } = this.props;\n\n    var libraryPullResultsArray = [];\n    for (var key in libraryPullResults) {\n      libraryPullResultsArray.push(libraryPullResults[key]);\n    }\n    //{showingPlaylistContent ? \"playlistContentDiv\" : \"libraryDiv\"}\n    return (\n      <div className=\"libraryDiv\">\n        {selectedTab === \"Favorites\"\n          ? libraryPullResultsArray.map((item) => (\n              <LibraryItem\n                key={item.id} \n                songInfo={item}\n                addSongToQueue={() =>\n                  this.props.addSongToQueue(\n                    \"Spotify\",\n                    Object.assign({}, item).track\n                  )\n                }\n                playSongNow={() =>\n                  this.props.playSongNow(Object.assign({}, item))\n                }\n                showSongOptions={() =>\n                  this.props.showSongOptions(Object.assign({}, item))\n                }\n              />\n            ))\n          : libraryPullResultsArray.map((item) => (\n              <PlaylistItem\n                playlistInfo={item}\n                showPlaylist={() => this.props.showPlaylist(item)}\n              />\n            ))}\n      </div>\n    );\n  }\n}\n\nexport default LibraryResults;\n"]},"metadata":{},"sourceType":"module"}