{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/AccountsWeb.css\";\nimport \"../../global.js\";\nimport spotifyLogo from \"../../resources/images/Spotify.png\";\nimport $ from \"jquery\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n\n    if (params.access_token) {\n      global.spotifyLoggedIn = true;\n      global.spotifyAccessToken = params.access_token;\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.getUserData(params.access_token).then(response => {\n        this.setState({\n          userImage: response.images[0].url\n        });\n        global.spotifyUserImage = response.images[0].url;\n      });\n    }\n\n    this.state = {\n      loggedIn: global.spotifyLoggedIn,\n      accessToken: global.spotifyAccessToken,\n      userImage: global.spotifyUserImage\n    };\n    this.logout = this.logout.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken\n      }\n    });\n  }\n\n  logout() {\n    global.spotifyLoggedIn = false;\n    global.spotifyAccessToken = \"\";\n    console.log(this);\n    this.setState({\n      loggedIn: false,\n      accessToken: \"\",\n      userImage: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"accountsDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spotifyBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"spotifyHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Spotify\"), React.createElement(\"img\", {\n      id: \"spotifyLogo\",\n      src: spotifyLogo,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.loggedIn == false ? React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"loginButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Login to your Spotify\")) : React.createElement(\"div\", {\n      id: \"loggedInDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"loggedInText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"userImage\",\n      src: this.state.userImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"loggedInHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Your Permissions Include:\"), React.createElement(\"div\", {\n      id: \"loggedInLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"- Read access to user\\u2019s subscription details\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"- Read access to user\\u2019s email address\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"- Read access to user\\u2019s player state\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"- Read access to user's \\\"Your Music\\\" library\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"- Write access to a user\\u2019s playback state\")), React.createElement(\"button\", {\n      id: \"logoutButton\",\n      onClick: () => this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Log out\"))));\n  }\n\n}\n\nexport default AccountsWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx"],"names":["React","Component","spotifyLogo","$","Spotify","spotifyWebApi","AccountsWeb","constructor","params","getHashParams","access_token","global","spotifyLoggedIn","spotifyAccessToken","setAccessToken","getUserData","then","response","setState","userImage","images","url","spotifyUserImage","state","loggedIn","accessToken","logout","bind","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","ajax","headers","Authorization","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,8BAAP;AAEA,OAAO,iBAAP;AAEA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAEA,MAAME,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,WAAW,GAAG;AACZ;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;;AAEA,QAAID,MAAM,CAACE,YAAX,EAAyB;AACvBC,MAAAA,MAAM,CAACC,eAAP,GAAyB,IAAzB;AACAD,MAAAA,MAAM,CAACE,kBAAP,GAA4BL,MAAM,CAACE,YAAnC;AAEAL,MAAAA,aAAa,CAACS,cAAd,CAA6BN,MAAM,CAACE,YAApC;AACA,WAAKK,WAAL,CAAiBP,MAAM,CAACE,YAAxB,EAAsCM,IAAtC,CAA4CC,QAAD,IAAc;AACvD,aAAKC,QAAL,CAAc;AACZC,UAAAA,SAAS,EAAEF,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBC;AADlB,SAAd;AAGAV,QAAAA,MAAM,CAACW,gBAAP,GAA0BL,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBC,GAA7C;AACD,OALD;AAMD;;AAED,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEb,MAAM,CAACC,eADN;AAEXa,MAAAA,WAAW,EAAEd,MAAM,CAACE,kBAFT;AAGXM,MAAAA,SAAS,EAAER,MAAM,CAACW;AAHP,KAAb;AAMA,SAAKI,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDlB,EAAAA,aAAa,GAAG;AACd,QAAImB,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QACEC,CAAC,GAAG,sBADN;AAAA,QAEEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CAFN;;AAGA,WAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAwB;AACtBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACD;;AAED,WAAOD,UAAP;AACD;;AAEDb,EAAAA,WAAW,CAACU,WAAD,EAAc;AACvB,WAAOtB,CAAC,CAACmC,IAAF,CAAO;AACZjB,MAAAA,GAAG,EAAE,+BADO;AAEZkB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYf;AADpB;AAFG,KAAP,CAAP;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACPf,IAAAA,MAAM,CAACC,eAAP,GAAyB,KAAzB;AACAD,IAAAA,MAAM,CAACE,kBAAP,GAA4B,EAA5B;AACA4B,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAKxB,QAAL,CAAc;AACZM,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,WAAW,EAAE,EAFD;AAGZN,MAAAA,SAAS,EAAE;AAHC,KAAd;AAKD;;AAEDwB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,EAAE,EAAC,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,GAAG,EAAEzC,WAA3B;AAAwC,MAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKqB,KAAL,CAAWC,QAAX,IAAuB,KAAvB,GACC;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADD,GAKC;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWJ,SAFlB;AAGE,MAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAG,MAAA,EAAE,EAAC,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCALF,EAME;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAG,MAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAPF,EAUE;AAAG,MAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAVF,EAWE;AAAG,MAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAXF,EAYE;AAAG,MAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAZF,EAeE;AAAG,MAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAfF,CADF,EAkBE;AAAQ,MAAA,EAAE,EAAC,cAAX;AAA0B,MAAA,OAAO,EAAE,MAAM,KAAKO,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlBF,CARJ,CADF,CADF;AAoCD;;AAhGiC;;AAmGpC,eAAepB,WAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/AccountsWeb.css\";\n\nimport \"../../global.js\";\n\nimport spotifyLogo from \"../../resources/images/Spotify.png\";\n\nimport $ from \"jquery\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n\n    if (params.access_token) {\n      global.spotifyLoggedIn = true;\n      global.spotifyAccessToken = params.access_token;\n\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.getUserData(params.access_token).then((response) => {\n        this.setState({\n          userImage: response.images[0].url,\n        });\n        global.spotifyUserImage = response.images[0].url;\n      });\n    }\n\n    this.state = {\n      loggedIn: global.spotifyLoggedIn,\n      accessToken: global.spotifyAccessToken,\n      userImage: global.spotifyUserImage,\n    };\n\n    this.logout = this.logout.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n    });\n  }\n\n  logout() {\n    global.spotifyLoggedIn = false;\n    global.spotifyAccessToken = \"\";\n    console.log(this);\n    this.setState({\n      loggedIn: false,\n      accessToken: \"\",\n      userImage: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"accountsDiv\">\n        <div className=\"spotifyBox\">\n          <p id=\"spotifyHeader\">Spotify</p>\n          <img id=\"spotifyLogo\" src={spotifyLogo} alt=\"\"></img>\n          {this.state.loggedIn == false ? (\n            <a href=\"http://localhost:8888\">\n              <button id=\"loginButton\">Login to your Spotify</button>\n            </a>\n          ) : (\n            <div id=\"loggedInDiv\">\n              <div id=\"loggedInText\">\n                <img\n                  className=\"userImage\"\n                  src={this.state.userImage}\n                  alt=\"\"></img>\n                <p id=\"loggedInHeader\">Your Permissions Include:</p>\n                <div id=\"loggedInLine\"></div>\n                <p id=\"loggedIn\">\n                  - Read access to user’s subscription details\n                </p>\n                <p id=\"loggedIn\">- Read access to user’s email address</p>\n                <p id=\"loggedIn\">- Read access to user’s player state</p>\n                <p id=\"loggedIn\">\n                  - Read access to user's \"Your Music\" library\n                </p>\n                <p id=\"loggedIn\">- Write access to a user’s playback state</p>\n              </div>\n              <button id=\"logoutButton\" onClick={() => this.logout}>\n                Log out\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccountsWeb;\n"]},"metadata":{},"sourceType":"module"}