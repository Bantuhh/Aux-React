{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/AccountsWeb.css\";\nimport $ from \"jquery\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    console.log(params.userId);\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      userImage: \"\",\n      userId: params.userId,\n      accessToken: params.access_token\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      userData = this.getUserData(params.access_token).responseJSON;\n      console.log(userData);\n      this.setState({\n        userImage: userData.images[0].url\n      });\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  } // getUserData() {\n  //   spotifyWebApi.getUser(this.state.accessToken).then((response) => {\n  //     console.log(response);\n  //     this.setState({\n  //       userImage: response.images[0].url,\n  //     });\n  //   });\n  // }\n\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"accountsDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.loggedIn == false ? React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"loginButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Login with Spotify\")) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"You are logged in\"), React.createElement(\"img\", {\n      className: \"userImage\",\n      src: this.state.userImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AccountsWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx"],"names":["React","Component","$","Spotify","spotifyWebApi","AccountsWeb","constructor","params","getHashParams","console","log","userId","state","loggedIn","access_token","userImage","accessToken","setAccessToken","userData","getUserData","responseJSON","setState","images","url","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","ajax","headers","Authorization","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,8BAAP;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAEA,MAAME,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,GAAG;AACZ;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,MAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEN,MAAM,CAACO,YAAP,GAAsB,IAAtB,GAA6B,KAD5B;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXJ,MAAAA,MAAM,EAAEJ,MAAM,CAACI,MAHJ;AAIXK,MAAAA,WAAW,EAAET,MAAM,CAACO;AAJT,KAAb;;AAMA,QAAIP,MAAM,CAACO,YAAX,EAAyB;AACvBV,MAAAA,aAAa,CAACa,cAAd,CAA6BV,MAAM,CAACO,YAApC;AACAI,MAAAA,QAAQ,GAAG,KAAKC,WAAL,CAAiBZ,MAAM,CAACO,YAAxB,EAAsCM,YAAjD;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACA,WAAKG,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAEG,QAAQ,CAACI,MAAT,CAAgB,CAAhB,EAAmBC;AADlB,OAAd;AAGD;AACF;;AAEDf,EAAAA,aAAa,GAAG;AACd,QAAIgB,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QACEC,CAAC,GAAG,sBADN;AAAA,QAEEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CAFN;;AAGA,WAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAwB;AACtBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACD;;AAED,WAAOD,UAAP;AACD,GA/BiC,CAiClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,EAAAA,WAAW,CAACH,WAAD,EAAc;AACvB,WAAOd,CAAC,CAACgC,IAAF,CAAO;AACZX,MAAAA,GAAG,EAAE,+BADO;AAEZY,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYpB;AADpB;AAFG,KAAP,CAAP;AAMD;;AAEDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzB,KAAL,CAAWC,QAAX,IAAuB,KAAvB,GACC;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,EAAE,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADD,GAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANJ,EAQE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWG,SAA3C;AAAsD,MAAA,GAAG,EAAC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AAhEiC;;AAmEpC,eAAeV,WAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/AccountsWeb.css\";\n\nimport $ from \"jquery\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    console.log(params.userId);\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      userImage: \"\",\n      userId: params.userId,\n      accessToken: params.access_token,\n    };\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      userData = this.getUserData(params.access_token).responseJSON;\n      console.log(userData);\n      this.setState({\n        userImage: userData.images[0].url,\n      });\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  // getUserData() {\n  //   spotifyWebApi.getUser(this.state.accessToken).then((response) => {\n  //     console.log(response);\n  //     this.setState({\n  //       userImage: response.images[0].url,\n  //     });\n  //   });\n  // }\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"accountsDiv\">\n        {this.state.loggedIn == false ? (\n          <a href=\"http://localhost:8888\">\n            <button id=\"loginButton\">Login with Spotify</button>\n          </a>\n        ) : (\n          <p>You are logged in</p>\n        )}\n        <img className=\"userImage\" src={this.state.userImage} alt=\"\"></img>\n      </div>\n    );\n  }\n}\n\nexport default AccountsWeb;\n"]},"metadata":{},"sourceType":"module"}