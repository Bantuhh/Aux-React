{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/seekbar.jsx\";\nimport React, { Component } from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\n\nvar Slider = require('react-native-slider');\n\nfunction pad(n, width, z = 0) {\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nconst minutesAndSeconds = position => [pad(Math.floor(position / 60), 2), pad(position % 60, 2)];\n\nconst SeekBar = ({\n  trackLength,\n  currentPosition,\n  onSeek,\n  onSlidingStart\n}) => {\n  const elapsed = minutesAndSeconds(currentPosition);\n  const remaining = minutesAndSeconds(trackLength - currentPosition);\n  return /*#__PURE__*/React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, elapsed[0] + \":\" + elapsed[1]), /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    style: [styles.text, {\n      width: 40\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, trackLength > 1 && \"-\" + remaining[0] + \":\" + remaining[1])), /*#__PURE__*/React.createElement(Slider, {\n    maximumValue: Math.max(trackLength, 1, currentPosition + 1),\n    onSlidingStart: onSlidingStart,\n    onSlidingComplete: onSeek,\n    value: currentPosition,\n    style: styles.slider,\n    minimumTrackTintColor: \"#fff\",\n    maximumTrackTintColor: \"rgba(255, 255, 255, 0.14)\",\n    thumbStyle: styles.thumb,\n    trackStyle: styles.track,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SeekBar;\nconst styles = StyleSheet.create({\n  slider: {\n    marginTop: -12\n  },\n  container: {\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingTop: 16\n  },\n  track: {\n    height: 2,\n    borderRadius: 1\n  },\n  thumb: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: 'white'\n  },\n  text: {\n    color: 'rgba(255, 255, 255, 0.72)',\n    fontSize: 12,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/seekbar.jsx"],"names":["React","Component","View","Text","StyleSheet","Image","TouchableOpacity","Slider","require","pad","n","width","z","length","Array","join","minutesAndSeconds","position","Math","floor","SeekBar","trackLength","currentPosition","onSeek","onSlidingStart","elapsed","remaining","styles","container","flexDirection","text","flex","max","slider","thumb","track","create","marginTop","paddingLeft","paddingRight","paddingTop","height","borderRadius","backgroundColor","color","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\n\nvar Slider = require('react-native-slider');\n\nfunction pad(n, width, z=0) {\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nconst minutesAndSeconds = (position) => ([\n  pad(Math.floor(position / 60), 2),\n  pad(position % 60, 2),\n]);\n\nconst SeekBar = ({\n  trackLength,\n  currentPosition,\n  onSeek,\n  onSlidingStart,\n}) => {\n  const elapsed = minutesAndSeconds(currentPosition);\n  const remaining = minutesAndSeconds(trackLength - currentPosition);\n  return (\n    <View style={styles.container}>\n      <View style={{flexDirection: 'row'}}>\n        <Text style={styles.text}>\n          {elapsed[0] + \":\" + elapsed[1]}\n        </Text>\n        <View style={{flex: 1}} />\n        <Text style={[styles.text, {width: 40}]}>\n          {trackLength > 1 && \"-\" + remaining[0] + \":\" + remaining[1]}\n        </Text>\n      </View>\n      <Slider\n        maximumValue={Math.max(trackLength, 1, currentPosition + 1)}\n        onSlidingStart={onSlidingStart}\n        onSlidingComplete={onSeek}\n        value={currentPosition}\n        style={styles.slider}\n        minimumTrackTintColor='#fff'\n        maximumTrackTintColor='rgba(255, 255, 255, 0.14)'\n        thumbStyle={styles.thumb}\n        trackStyle={styles.track}/>\n    </View>\n  );\n};\n\nexport default SeekBar;\n\nconst styles = StyleSheet.create({\n  slider: {\n    marginTop: -12,\n  },\n  container: {\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingTop: 16,\n  },\n  track: {\n    height: 2,\n    borderRadius: 1,\n  },\n  thumb: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: 'white',\n  },\n  text: {\n    color: 'rgba(255, 255, 255, 0.72)',\n    fontSize: 12,\n    textAlign:'center',\n  }\n});"]},"metadata":{},"sourceType":"module"}