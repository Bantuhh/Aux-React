{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionWeb.jsx\";\nimport React, { Component, useEffect } from \"react\";\nimport SpotifyScript from \"./spotifyScript\";\nimport \"../../styles/SessionWeb.css\";\nimport SessionController from \"./sessionController\";\nimport SessionQueue from \"./sessionQueue\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\nconst accessToken = spotifyWebApi.getAccessToken().then(response => {\n  console.log(response);\n  return response;\n}, reason => {\n  console.log(reason);\n  return reason;\n});\nconst {\n  Script: WebPlaybackSdkScript,\n  deviceId,\n  connect: connectWebPlaybackSdk,\n  player,\n  // https://developer.spotify.com/documentation/web-playback-sdk/reference/#api-spotify-player\n  isReady\n} = useSpotifyWebPlaybackSdk({\n  name: \"My Spotify Player\",\n  // Device that shows up in the spotify devices list\n  getOAuthToken: () => Promise.resolve(accessToken),\n  // Wherever you get your access token from\n  onPlayerStateChanged: playerState => {\n    console.log(\"player state changed:\", playerState);\n  }\n});\nReact.useEffect(() => {\n  if (isReady) {\n    connect();\n  }\n}, [isReady]);\n\nclass SessionWeb extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Suspense, {\n      fallback: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading...\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(WebPlaybackSdkScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sessionFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sessionMiddle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(SessionController, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(SessionQueue, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sessionRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default SessionWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionWeb.jsx"],"names":["React","Component","useEffect","SpotifyScript","SessionController","SessionQueue","Spotify","spotifyWebApi","accessToken","getAccessToken","then","response","console","log","reason","Script","WebPlaybackSdkScript","deviceId","connect","connectWebPlaybackSdk","player","isReady","useSpotifyWebPlaybackSdk","name","getOAuthToken","Promise","resolve","onPlayerStateChanged","playerState","SessionWeb","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,6BAAP;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;AAEA,MAAME,WAAW,GAAGD,aAAa,CAACE,cAAd,GAA+BC,IAA/B,CACjBC,QAAD,IAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAOA,QAAP;AACD,CAJiB,EAKjBG,MAAD,IAAY;AACVF,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,SAAOA,MAAP;AACD,CARiB,CAApB;AAWA,MAAM;AACJC,EAAAA,MAAM,EAAEC,oBADJ;AAEJC,EAAAA,QAFI;AAGJC,EAAAA,OAAO,EAAEC,qBAHL;AAIJC,EAAAA,MAJI;AAII;AACRC,EAAAA;AALI,IAMFC,wBAAwB,CAAC;AAC3BC,EAAAA,IAAI,EAAE,mBADqB;AACA;AAC3BC,EAAAA,aAAa,EAAE,MAAMC,OAAO,CAACC,OAAR,CAAgBlB,WAAhB,CAFM;AAEwB;AACnDmB,EAAAA,oBAAoB,EAAGC,WAAD,IAAiB;AACrChB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCe,WAArC;AACD;AAL0B,CAAD,CAN5B;AAcA5B,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB,MAAImB,OAAJ,EAAa;AACXH,IAAAA,OAAO;AACR;AACF,CAJD,EAIG,CAACG,OAAD,CAJH;;AAMA,MAAMQ,UAAN,SAAyB5B,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjC6B,KADiC,GACzB,EADyB;AAAA;;AAGjCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,CADF;AAaD;;AAjBgC;;AAoBnC,eAAeF,UAAf","sourcesContent":["import React, { Component, useEffect } from \"react\";\n\nimport SpotifyScript from \"./spotifyScript\";\n\nimport \"../../styles/SessionWeb.css\";\n\nimport SessionController from \"./sessionController\";\nimport SessionQueue from \"./sessionQueue\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nconst accessToken = spotifyWebApi.getAccessToken().then(\n  (response) => {\n    console.log(response);\n    return response;\n  },\n  (reason) => {\n    console.log(reason);\n    return reason;\n  }\n);\n\nconst {\n  Script: WebPlaybackSdkScript,\n  deviceId,\n  connect: connectWebPlaybackSdk,\n  player, // https://developer.spotify.com/documentation/web-playback-sdk/reference/#api-spotify-player\n  isReady,\n} = useSpotifyWebPlaybackSdk({\n  name: \"My Spotify Player\", // Device that shows up in the spotify devices list\n  getOAuthToken: () => Promise.resolve(accessToken), // Wherever you get your access token from\n  onPlayerStateChanged: (playerState) => {\n    console.log(\"player state changed:\", playerState);\n  },\n});\n\nReact.useEffect(() => {\n  if (isReady) {\n    connect();\n  }\n}, [isReady]);\n\nclass SessionWeb extends Component {\n  state = {};\n\n  render() {\n    return (\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <WebPlaybackSdkScript>\n          <div className=\"sessionFlex\">\n            <div className=\"sessionMiddle\">\n              <SessionController></SessionController>\n              <SessionQueue></SessionQueue>\n            </div>\n            <div className=\"sessionRight\"></div>\n          </div>\n        </WebPlaybackSdkScript>\n      </React.Suspense>\n    );\n  }\n}\n\nexport default SessionWeb;\n"]},"metadata":{},"sourceType":"module"}