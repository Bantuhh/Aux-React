{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionWeb.jsx\";\nimport React, { Component, useEffect } from \"react\";\nimport Script from \"react-load-script\";\nimport \"../../styles/SessionWeb.css\";\nimport SessionController from \"./sessionController\";\nimport SessionQueue from \"./sessionQueue\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SessionWeb extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleScriptLoad = () => {\n      return new Promise(resolve => {\n        if (window.Spotify) {\n          resolve();\n        } else {\n          window.onSpotifyWebPlaybackSDKReady = resolve;\n        }\n      });\n    };\n\n    this.handleScriptError = () => {\n      console.log(\"SCRIPT ERROR\");\n    };\n  }\n\n  render() {\n    return React.createElement(Script, {\n      url: \"https://sdk.scdn.co/spotify-player.js\",\n      onError: this.handleScriptError,\n      onLoad: this.handleScriptLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sessionFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sessionMiddle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(SessionController, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(SessionQueue, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sessionRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SessionWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionWeb.jsx"],"names":["React","Component","useEffect","Script","SessionController","SessionQueue","Spotify","spotifyWebApi","SessionWeb","state","handleScriptLoad","Promise","resolve","window","onSpotifyWebPlaybackSDKReady","handleScriptError","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,6BAAP;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAEA,MAAME,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB,EADyB;;AAAA,SAGjCC,gBAHiC,GAGd,MAAM;AACvB,aAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAIC,MAAM,CAACP,OAAX,EAAoB;AAClBM,UAAAA,OAAO;AACR,SAFD,MAEO;AACLC,UAAAA,MAAM,CAACC,4BAAP,GAAsCF,OAAtC;AACD;AACF,OANM,CAAP;AAOD,KAXgC;;AAAA,SAajCG,iBAbiC,GAab,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAfgC;AAAA;;AAiBjCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAC,uCADN;AAEE,MAAA,OAAO,EAAE,KAAKH,iBAFhB;AAGE,MAAA,MAAM,EAAE,KAAKL,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAJF,CADF;AAcD;;AAhCgC;;AAmCnC,eAAeF,UAAf","sourcesContent":["import React, { Component, useEffect } from \"react\";\n\nimport Script from \"react-load-script\";\n\nimport \"../../styles/SessionWeb.css\";\n\nimport SessionController from \"./sessionController\";\nimport SessionQueue from \"./sessionQueue\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SessionWeb extends Component {\n  state = {};\n\n  handleScriptLoad = () => {\n    return new Promise((resolve) => {\n      if (window.Spotify) {\n        resolve();\n      } else {\n        window.onSpotifyWebPlaybackSDKReady = resolve;\n      }\n    });\n  };\n\n  handleScriptError = () => {\n    console.log(\"SCRIPT ERROR\");\n  };\n\n  render() {\n    return (\n      <Script\n        url=\"https://sdk.scdn.co/spotify-player.js\"\n        onError={this.handleScriptError}\n        onLoad={this.handleScriptLoad}>\n        <div className=\"sessionFlex\">\n          <div className=\"sessionMiddle\">\n            <SessionController></SessionController>\n            <SessionQueue></SessionQueue>\n          </div>\n          <div className=\"sessionRight\"></div>\n        </div>\n      </Script>\n    );\n  }\n}\n\nexport default SessionWeb;\n"]},"metadata":{},"sourceType":"module"}