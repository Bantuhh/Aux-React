{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/AccountsWeb.css\";\nimport \"../../global.js\";\nimport spotifyLogo from \"../../resources/images/Spotify.png\";\nimport $ from \"jquery\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n\n    if (params.access_token) {\n      global.spotifyLoggedIn = true;\n      global.spotifyAccessToken = params.access_token;\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.getUserData(params.access_token).then(response => {\n        this.setState({\n          userImage: response.images[0].url\n        });\n        global.spotifyUserImage = response.images[0].url;\n      });\n    }\n\n    this.state = {\n      loggedIn: global.spotifyLoggedIn,\n      accessToken: global.spotifyAccessToken,\n      userImage: global.spotifyUserImage\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"accountsDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spotifyBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"spotifyHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Spotify\"), React.createElement(\"img\", {\n      id: \"spotifyLogo\",\n      src: spotifyLogo,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.state.loggedIn == false ? React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"loginButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Login to your Spotify\")) : React.createElement(\"div\", {\n      id: \"loggedInDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"- Read access to user\\u2019s subscription details\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"- Read access to user\\u2019s email address\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"- Read access to user\\u2019s player state\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"- Read access to user's \\\"Your Music\\\" library\"), React.createElement(\"p\", {\n      id: \"loggedIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"- Write access to a user\\u2019s playback state\"), React.createElement(\"img\", {\n      className: \"userImage\",\n      src: this.state.userImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AccountsWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx"],"names":["React","Component","spotifyLogo","$","Spotify","spotifyWebApi","AccountsWeb","constructor","params","getHashParams","access_token","global","spotifyLoggedIn","spotifyAccessToken","setAccessToken","getUserData","then","response","setState","userImage","images","url","spotifyUserImage","state","loggedIn","accessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","ajax","headers","Authorization","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/AccountsWeb.css\";\n\nimport \"../../global.js\";\n\nimport spotifyLogo from \"../../resources/images/Spotify.png\";\n\nimport $ from \"jquery\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n\n    if (params.access_token) {\n      global.spotifyLoggedIn = true;\n      global.spotifyAccessToken = params.access_token;\n\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.getUserData(params.access_token).then((response) => {\n        this.setState({\n          userImage: response.images[0].url,\n        });\n        global.spotifyUserImage = response.images[0].url;\n      });\n    }\n\n    this.state = {\n      loggedIn: global.spotifyLoggedIn,\n      accessToken: global.spotifyAccessToken,\n      userImage: global.spotifyUserImage,\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"accountsDiv\">\n        <div className=\"spotifyBox\">\n          <p id=\"spotifyHeader\">Spotify</p>\n          <img id=\"spotifyLogo\" src={spotifyLogo} alt=\"\"></img>\n          {this.state.loggedIn == false ? (\n            <a href=\"http://localhost:8888\">\n              <button id=\"loginButton\">Login to your Spotify</button>\n            </a>\n          ) : (\n            <div id=\"loggedInDiv\">\n              <p id=\"loggedIn\">- Read access to user’s subscription details</p>\n              <p id=\"loggedIn\">- Read access to user’s email address</p>\n              <p id=\"loggedIn\">- Read access to user’s player state</p>\n              <p id=\"loggedIn\">- Read access to user's \"Your Music\" library</p>\n              <p id=\"loggedIn\">- Write access to a user’s playback state</p>\n              <img\n                className=\"userImage\"\n                src={this.state.userImage}\n                alt=\"\"></img>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccountsWeb;\n"]},"metadata":{},"sourceType":"module"}