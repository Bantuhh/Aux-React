{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/library/libraryWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/LibraryWeb.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport LibraryResults from \"./libraryResults\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass LibraryWeb extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.createNotification = type => {\n      console.log(\"GOT TO CREATE NOTIFICATION\");\n\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(\"Info message\");\n          break;\n\n        case \"success\":\n          NotificationManager.success(\"Success message\", \"Title here\");\n          break;\n\n        case \"warning\":\n          NotificationManager.warning(\"Warning message\", \"Close after 3000ms\", 3000);\n          break;\n\n        case \"error\":\n          NotificationManager.error(\"Make sure you are logged into your Spotify\", \"Error!\", 5000, () => {//alert(\"callback\");\n          });\n          break;\n      }\n\n      return () => {};\n    };\n\n    this.getSpotifyLibrary = () => {\n      var query = document.getElementById(\"searchQuery\").value;\n      spotifyWebApi.searchTracks(query).then(response => {\n        console.log(response);\n        this.setState({\n          trackSearchResults: response.tracks.items,\n          spotifySearch: true\n        });\n      }, reason => {\n        console.log(\"GOT TO ERROR\");\n        this.createNotification(\"error\");\n        console.error(reason); // Error!\n      });\n    };\n\n    this.tabClick = () => {\n      var i, tablinks;\n      tablinks = document.getElementsByClassName(\"tablinks\");\n      console.log(tablinks);\n\n      for (i = 0; i < tablinks.length; i++) {\n        console.log(tablinks[i].className);\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n        console.log(tablinks[i].className);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"libraryFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"libraryMiddle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"libraryQueryDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"libraryTabDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"tablinks\",\n      onClick: this.tabClick,\n      id: \"defaultOpen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Favorites\"), React.createElement(\"button\", {\n      class: \"tablinks\",\n      onClick: this.tabClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Playlists\")), React.createElement(\"div\", {\n      className: \"libraryButtonDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"spotifyLibraryBtn\",\n      onClick: this.getSpotifyLibrary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      id: \"libraryDivHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.spotifySearch ? \"Spotify\" : \"Click desired platform to see library..\")), React.createElement(LibraryResults, {\n      libraryPullResults: this.state.libraryPullResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(NotificationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"libraryRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LibraryWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/library/libraryWeb.jsx"],"names":["React","Component","NotificationContainer","NotificationManager","LibraryResults","Spotify","spotifyWebApi","LibraryWeb","state","createNotification","type","console","log","info","success","warning","error","getSpotifyLibrary","query","document","getElementById","value","searchTracks","then","response","setState","trackSearchResults","tracks","items","spotifySearch","reason","tabClick","i","tablinks","getElementsByClassName","length","className","replace","render","libraryPullResults"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/LibraryWeb.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\nimport LibraryResults from \"./libraryResults\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass LibraryWeb extends Component {\n  state = {};\n\n  createNotification = (type) => {\n    console.log(\"GOT TO CREATE NOTIFICATION\");\n    switch (type) {\n      case \"info\":\n        NotificationManager.info(\"Info message\");\n        break;\n      case \"success\":\n        NotificationManager.success(\"Success message\", \"Title here\");\n        break;\n      case \"warning\":\n        NotificationManager.warning(\n          \"Warning message\",\n          \"Close after 3000ms\",\n          3000\n        );\n        break;\n      case \"error\":\n        NotificationManager.error(\n          \"Make sure you are logged into your Spotify\",\n          \"Error!\",\n          5000,\n          () => {\n            //alert(\"callback\");\n          }\n        );\n        break;\n    }\n    return () => {};\n  };\n\n  getSpotifyLibrary = () => {\n    var query = document.getElementById(\"searchQuery\").value;\n    spotifyWebApi.searchTracks(query).then(\n      (response) => {\n        console.log(response);\n        this.setState({\n          trackSearchResults: response.tracks.items,\n          spotifySearch: true,\n        });\n      },\n      (reason) => {\n        console.log(\"GOT TO ERROR\");\n        this.createNotification(\"error\");\n        console.error(reason); // Error!\n      }\n    );\n  };\n\n  tabClick = () => {\n    var i, tablinks;\n\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    console.log(tablinks);\n    for (i = 0; i < tablinks.length; i++) {\n      console.log(tablinks[i].className);\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n      console.log(tablinks[i].className);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"libraryFlex\">\n        <div className=\"libraryMiddle\">\n          <div className=\"libraryQueryDiv\">\n            <div className=\"libraryTabDiv\">\n              <button class=\"tablinks\" onClick={this.tabClick} id=\"defaultOpen\">\n                Favorites\n              </button>\n              <button class=\"tablinks\" onClick={this.tabClick}>\n                Playlists\n              </button>\n            </div>\n            <div className=\"libraryButtonDiv\">\n              <button\n                id=\"spotifyLibraryBtn\"\n                onClick={this.getSpotifyLibrary}></button>\n            </div>\n            <p id=\"libraryDivHeader\">\n              {this.state.spotifySearch\n                ? \"Spotify\"\n                : \"Click desired platform to see library..\"}\n            </p>\n          </div>\n          <LibraryResults\n            libraryPullResults={this.state.libraryPullResults}></LibraryResults>\n          <NotificationContainer />\n        </div>\n        <div className=\"libraryRight\"></div>\n      </div>\n    );\n  }\n}\n\nexport default LibraryWeb;\n"]},"metadata":{},"sourceType":"module"}