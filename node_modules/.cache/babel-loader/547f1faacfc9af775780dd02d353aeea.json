{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Session from \"./pages/session\";\nimport Search from \"./pages/search\";\nimport Library from \"./pages/library\";\nimport Welcome from \"./pages/welcome\";\nimport SignUp from \"./pages/signUp\";\nimport NotFoundPage from \"./pages/404\"; //Import all needed Component for this tutorial\n\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\"; // Side Nav imports\n\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\"; // Be sure to include styles at some point, probably during your bootstraping\n\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport \"font-awesome/css/font-awesome.min.css\"; // Import Auth0Context instead of useAuth0\n\nimport { Auth0Context } from \"./react-auth0-spa\";\n\nclass App extends Component {\n  componentDidMount() {\n    document.body.style.background = \"#252525\";\n  }\n\n  render() {\n    const {\n      loading,\n      isAuthenticated,\n      loginWithRedirect,\n      logout\n    } = this.context;\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/Session\",\n      component: Session,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Search\",\n      component: Search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Library\",\n      component: Library,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/Welcome\",\n      component: Welcome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signUp\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/404\",\n      component: NotFoundPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), isAuthenticated && React.createElement(Redirect, {\n      to: \"/Session\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/Welcome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))) // <Router>\n    //   <Route\n    //     render={({ location, history }) => (\n    //       <React.Fragment>\n    //         {isAuthenticated && (\n    //           <SideNav\n    //             className=\"sidenav\"\n    //             onSelect={(selected) => {\n    //               const to = \"/\" + selected;\n    //               if (location.pathname !== to) {\n    //                 history.push(to);\n    //               }\n    //             }}>\n    //             <SideNav.Toggle />\n    //             <SideNav.Nav defaultSelected=\"Session\">\n    //               <NavItem eventKey=\"Session\">\n    //                 <NavIcon>\n    //                   <i\n    //                     className=\"fa fa-fw fa-bar-chart\"\n    //                     style={{ fontSize: \"1.75em\" }}\n    //                   />\n    //                 </NavIcon>\n    //                 <NavText>Dashboard</NavText>\n    //               </NavItem>\n    //               <NavItem eventKey=\"Search\">\n    //                 <NavIcon>\n    //                   <i\n    //                     className=\"fa fa-fw fa-users\"\n    //                     style={{ fontSize: \"1.75em\" }}\n    //                   />\n    //                 </NavIcon>\n    //                 <NavText>Customers</NavText>\n    //               </NavItem>\n    //               <NavItem eventKey=\"Library\">\n    //                 <NavIcon>\n    //                   <i\n    //                     className=\"fa fa-fw fa-sliders\"\n    //                     style={{ fontSize: \"1.75em\" }}\n    //                   />\n    //                 </NavIcon>\n    //                 <NavText>Settings</NavText>\n    //               </NavItem>\n    //             </SideNav.Nav>\n    //           </SideNav>\n    //         )}\n    //         <main>\n    //           <Switch>\n    //             <Route exact path=\"/Session\" component={Session} />\n    //             <Route exact path=\"/Search\" component={Search} />\n    //             <Route exact path=\"/Library\" component={Library} />\n    //             <Route exact path=\"/Welcome\" component={Welcome} />\n    //             <Route exact path=\"/signUp\" component={SignUp} />\n    //             <Route exact path=\"/404\" component={NotFoundPage} />\n    //             <Redirect to=\"/404\" />\n    //           </Switch>\n    //         </main>\n    //       </React.Fragment>\n    //     )}\n    //   />\n    // </Router>\n    ;\n  }\n\n}\n\nApp.contextType = Auth0Context;\nexport default App;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/App.js"],"names":["React","Component","Session","Search","Library","Welcome","SignUp","NotFoundPage","BrowserRouter","Router","Route","Switch","Link","Redirect","SideNav","NavItem","NavIcon","NavText","Auth0Context","App","componentDidMount","document","body","style","background","render","loading","isAuthenticated","loginWithRedirect","logout","context","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Session from \"./pages/session\";\nimport Search from \"./pages/search\";\nimport Library from \"./pages/library\";\nimport Welcome from \"./pages/welcome\";\nimport SignUp from \"./pages/signUp\";\n\nimport NotFoundPage from \"./pages/404\";\n\n//Import all needed Component for this tutorial\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\n// Side Nav imports\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\n\n// Be sure to include styles at some point, probably during your bootstraping\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\n\nimport \"font-awesome/css/font-awesome.min.css\";\n\n// Import Auth0Context instead of useAuth0\nimport { Auth0Context } from \"./react-auth0-spa\";\n\nclass App extends Component {\n  componentDidMount() {\n    document.body.style.background = \"#252525\";\n  }\n\n  static contextType = Auth0Context;\n\n  render() {\n    const {\n      loading,\n      isAuthenticated,\n      loginWithRedirect,\n      logout,\n    } = this.context;\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/Session\" component={Session} />\n          <Route exact path=\"/Search\" component={Search} />\n          <Route exact path=\"/Library\" component={Library} />\n          <Route exact path=\"/Welcome\" component={Welcome} />\n          <Route exact path=\"/signUp\" component={SignUp} />\n          <Route exact path=\"/404\" component={NotFoundPage} />\n          {isAuthenticated && <Redirect to=\"/Session\" />}\n          <Redirect to=\"/Welcome\" />\n        </Switch>\n      </Router>\n      // <Router>\n      //   <Route\n      //     render={({ location, history }) => (\n      //       <React.Fragment>\n      //         {isAuthenticated && (\n      //           <SideNav\n      //             className=\"sidenav\"\n      //             onSelect={(selected) => {\n      //               const to = \"/\" + selected;\n      //               if (location.pathname !== to) {\n      //                 history.push(to);\n      //               }\n      //             }}>\n      //             <SideNav.Toggle />\n      //             <SideNav.Nav defaultSelected=\"Session\">\n      //               <NavItem eventKey=\"Session\">\n      //                 <NavIcon>\n      //                   <i\n      //                     className=\"fa fa-fw fa-bar-chart\"\n      //                     style={{ fontSize: \"1.75em\" }}\n      //                   />\n      //                 </NavIcon>\n      //                 <NavText>Dashboard</NavText>\n      //               </NavItem>\n      //               <NavItem eventKey=\"Search\">\n      //                 <NavIcon>\n      //                   <i\n      //                     className=\"fa fa-fw fa-users\"\n      //                     style={{ fontSize: \"1.75em\" }}\n      //                   />\n      //                 </NavIcon>\n      //                 <NavText>Customers</NavText>\n      //               </NavItem>\n      //               <NavItem eventKey=\"Library\">\n      //                 <NavIcon>\n      //                   <i\n      //                     className=\"fa fa-fw fa-sliders\"\n      //                     style={{ fontSize: \"1.75em\" }}\n      //                   />\n      //                 </NavIcon>\n      //                 <NavText>Settings</NavText>\n      //               </NavItem>\n      //             </SideNav.Nav>\n      //           </SideNav>\n      //         )}\n      //         <main>\n      //           <Switch>\n      //             <Route exact path=\"/Session\" component={Session} />\n      //             <Route exact path=\"/Search\" component={Search} />\n      //             <Route exact path=\"/Library\" component={Library} />\n      //             <Route exact path=\"/Welcome\" component={Welcome} />\n      //             <Route exact path=\"/signUp\" component={SignUp} />\n      //             <Route exact path=\"/404\" component={NotFoundPage} />\n      //             <Redirect to=\"/404\" />\n      //           </Switch>\n      //         </main>\n      //       </React.Fragment>\n      //     )}\n      //   />\n      // </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}