{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/AccountsWeb.css\";\nimport spotifyLogo from \"../../resources/images/Spotify.png\";\nimport $ from \"jquery\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      userImage: \"\",\n      userId: params.userId,\n      accessToken: params.access_token\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.getUserData(params.access_token).then(response => {\n        this.setState({\n          userImage: response.images[0].url\n        });\n      }); // this.setState({\n      //   userImage: userData.images[0].url,\n      // });\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  } // getUserData() {\n  //   spotifyWebApi.getUser(this.state.accessToken).then((response) => {\n  //     console.log(response);\n  //     this.setState({\n  //       userImage: response.images[0].url,\n  //     });\n  //   });\n  // }\n\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"accountsDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spotifyBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"spotifyHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Spotify\"), React.createElement(\"img\", {\n      id: \"spotifyLogo\",\n      src: spotifyLogo,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.state.loggedIn == false ? React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"loginButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Login to your Spotify\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"You are logged in with Spotify.\"), React.createElement(\"img\", {\n      className: \"userImage\",\n      src: this.state.userImage,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default AccountsWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/accounts/accountsWeb.jsx"],"names":["React","Component","spotifyLogo","$","Spotify","spotifyWebApi","AccountsWeb","constructor","params","getHashParams","state","loggedIn","access_token","userImage","userId","accessToken","setAccessToken","getUserData","then","response","setState","images","url","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","ajax","headers","Authorization","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/AccountsWeb.css\";\n\nimport spotifyLogo from \"../../resources/images/Spotify.png\";\n\nimport $ from \"jquery\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass AccountsWeb extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      userImage: \"\",\n      userId: params.userId,\n      accessToken: params.access_token,\n    };\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      this.getUserData(params.access_token).then((response) => {\n        this.setState({\n          userImage: response.images[0].url,\n        });\n      });\n      // this.setState({\n      //   userImage: userData.images[0].url,\n      // });\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  // getUserData() {\n  //   spotifyWebApi.getUser(this.state.accessToken).then((response) => {\n  //     console.log(response);\n  //     this.setState({\n  //       userImage: response.images[0].url,\n  //     });\n  //   });\n  // }\n\n  getUserData(accessToken) {\n    return $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      headers: {\n        Authorization: \"Bearer \" + accessToken,\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"accountsDiv\">\n        <div className=\"spotifyBox\">\n          <p id=\"spotifyHeader\">Spotify</p>\n          <img id=\"spotifyLogo\" src={spotifyLogo} alt=\"\"></img>\n          {this.state.loggedIn == false ? (\n            <a href=\"http://localhost:8888\">\n              <button id=\"loginButton\">Login to your Spotify</button>\n            </a>\n          ) : (\n            <div>\n              <p>You are logged in with Spotify.</p>\n              <img\n                className=\"userImage\"\n                src={this.state.userImage}\n                alt=\"\"></img>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccountsWeb;\n"]},"metadata":{},"sourceType":"module"}