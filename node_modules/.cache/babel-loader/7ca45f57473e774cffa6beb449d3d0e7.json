{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionQueue.jsx\";\nimport React, { Component } from \"react\";\nimport { SessionContext } from \"../../session-context\";\nimport \"./SessionQueue.css\";\nimport QueueItem from \"./queueItem\";\nimport EditingQueueItem from \"./editingQueueItem\";\n\nclass SessionQueue extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queue: global.sessionQueue\n    };\n\n    this.removeSong = songInfo => {\n      console.log(\"Removing song from queue:\", songInfo); // Splice will remove first occurence of element. If duplicates, then remove the last occurence, hence reverse()\n\n      var queueCopy = global.sessionQueue;\n      queueCopy.reverse();\n      var index = queueCopy.indexOf(songInfo);\n\n      if (index > -1) {\n        queueCopy.splice(index, 1);\n      }\n\n      global.sessionQueue = queueCopy.reverse();\n      this.context.updateSessionQueue(global.sessionQueue);\n    };\n\n    this.onDrop = e => {\n      console.log('onDrop');\n      console.log('Dropped index', global.draggedQueueItemIndex);\n      console.log(\"Dropped onto index\", global.draggedOntoQueueItemIndex);\n      var tmp = global.sessionQueue[global.draggedQueueItemIndex];\n      global.sessionQueue[global.draggedQueueItemIndex] = global.sessionQueue[global.draggedOntoQueueItemIndex];\n      global.sessionQueue[global.draggedOntoQueueItemIndex] = tmp;\n      this.context.updateSessionQueue(global.sessionQueue);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(SessionContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, ({\n      sessionQueue\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.deviceType === \"Web\" ? \"queueDivWeb\" : \"queueDivMobile\",\n      onDrop: this.onDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, global.sessionQueue.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"noQueueItemsDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"noQueueItemsText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Add some songs to the queue, eh?\")) : this.props.isEditingQueue ? global.sessionQueue.map(item => /*#__PURE__*/React.createElement(EditingQueueItem, {\n      deviceType: this.props.deviceType,\n      songInfo: item,\n      removeSong: () => this.removeSong(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 49\n      }\n    })) : global.sessionQueue.map(item => /*#__PURE__*/React.createElement(QueueItem, {\n      deviceType: this.props.deviceType,\n      songInfo: item,\n      showContentOptions: () => this.props.showContentOptions(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 49\n      }\n    }))));\n  }\n\n}\n\nSessionQueue.contextType = SessionContext;\nexport default SessionQueue;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/session/sessionQueue.jsx"],"names":["React","Component","SessionContext","QueueItem","EditingQueueItem","SessionQueue","state","queue","global","sessionQueue","removeSong","songInfo","console","log","queueCopy","reverse","index","indexOf","splice","context","updateSessionQueue","onDrop","e","draggedQueueItemIndex","draggedOntoQueueItemIndex","tmp","render","props","deviceType","length","isEditingQueue","map","item","showContentOptions","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { SessionContext } from \"../../session-context\";\n\nimport \"./SessionQueue.css\";\n\nimport QueueItem from \"./queueItem\";\n\nimport EditingQueueItem from \"./editingQueueItem\";\n\n\nclass SessionQueue extends Component {\n  state = {\n    queue: global.sessionQueue,\n  };\n\n  // Remove song from global queue and update\n  removeSong = (songInfo) => {\n    console.log(\"Removing song from queue:\", songInfo);\n\n    // Splice will remove first occurence of element. If duplicates, then remove the last occurence, hence reverse()\n    var queueCopy = global.sessionQueue;\n    queueCopy.reverse()\n\n    var index = queueCopy.indexOf(songInfo);\n    if (index > -1) {\n      queueCopy.splice(index, 1);\n    }\n\n    global.sessionQueue = queueCopy.reverse()\n\n    this.context.updateSessionQueue(global.sessionQueue);\n  }\n\n  onDrop = (e) => {\n    console.log('onDrop');\n    \n    console.log('Dropped index', global.draggedQueueItemIndex);\n    console.log(\"Dropped onto index\", global.draggedOntoQueueItemIndex)\n\n    var tmp = global.sessionQueue[global.draggedQueueItemIndex];\n    global.sessionQueue[global.draggedQueueItemIndex] = global.sessionQueue[global.draggedOntoQueueItemIndex];\n    global.sessionQueue[global.draggedOntoQueueItemIndex] = tmp;\n\n    this.context.updateSessionQueue(global.sessionQueue);\n  }\n\n  render() {\n    return (\n      <SessionContext.Consumer>\n        {({ sessionQueue }) => (\n          <div id={this.props.deviceType === \"Web\" ? \"queueDivWeb\" : \"queueDivMobile\"} onDrop={this.onDrop}>\n            \n            {global.sessionQueue.length === 0 ? (\n              <div className=\"noQueueItemsDiv\">\n                <p className=\"noQueueItemsText\">\n                  Add some songs to the queue, eh?\n                </p>\n  \n \n\n              </div>\n            ) : this.props.isEditingQueue ? (\n              global.sessionQueue.map((item) => <EditingQueueItem deviceType={this.props.deviceType} songInfo={item} removeSong={() => this.removeSong(item)}/>)) : (\n              global.sessionQueue.map((item) => <QueueItem deviceType={this.props.deviceType} songInfo={item} showContentOptions={() => this.props.showContentOptions(item)} />)\n            )}\n          </div>\n        )}\n      </SessionContext.Consumer>\n    );\n  }\n}\nSessionQueue.contextType = SessionContext;\n\nexport default SessionQueue;\n"]},"metadata":{},"sourceType":"module"}