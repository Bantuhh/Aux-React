{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Session from \"./pages/session\";\nimport Search from \"./pages/search\";\nimport Library from \"./pages/library\";\nimport Welcome from \"./pages/welcome\";\nimport SignUp from \"./pages/signUp\";\nimport Accounts from \"./pages/accounts\";\nimport NotFoundPage from \"./pages/404\";\nimport BottomNavBar from \"./components/bottomNavBar\"; //Import all needed Component for this tutorial\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"; // Import Notifications\n\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\"; // Side Nav imports\n\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\"; // Be sure to include styles at some point, probably during your bootstraping\n\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport MediaQuery from \"react-responsive\";\nimport { DndProvider } from 'react-dnd-multi-backend';\nimport HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch'; // Import Auth0Context instead of useAuth0\n\nimport { Auth0Context } from \"./react-auth0-spa\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { SessionContext } from \"./session-context\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'; // import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport YouTube from \"react-youtube\";\nconst Tab = createBottomTabNavigator();\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createNotification = type => {\n      console.log(\"GOT TO CREATE NOTIFICATION\");\n\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(\"Info message\");\n          break;\n\n        case \"success\":\n          NotificationManager.success(\"I knew you could do it.\", \"Song added to queue\", 1500);\n          break;\n\n        case \"mobileOrientation\":\n          // Check when last orientation notification was, if in last two mintues then don't display new one\n          var currTime = new Date();\n\n          if (this.state.lastOrientationNotification === '') {\n            NotificationManager.warning(\"Please Rotate Device to Portrait\", \"Attention:\", 3000);\n            this.setState({\n              lastOrientationNotification: new Date()\n            });\n          } else if (currTime.getTime() - this.state.lastOrientationNotification.getTime() > 30000) {\n            NotificationManager.warning(\"Please Rotate Device to Portrait\", \"Attention:\", 3000);\n            this.setState({\n              lastOrientationNotification: new Date()\n            });\n          }\n\n          break;\n\n        case \"warning\":\n          NotificationManager.warning(\"Warning message\", \"Close after 3000ms\", 3000);\n          break;\n\n        case \"error\":\n          NotificationManager.error(\"Make sure you are logged into your Spotify.\", \"Error!\", 5000, () => {//alert(\"callback\");\n          });\n          break;\n\n        default:\n          console.log(\"Not a known notification\");\n          break;\n      }\n\n      return () => {};\n    };\n\n    this.checkPlayerStatus = state => {\n      console.log(\"Player Status: \", state);\n\n      if (state.deviceId !== \"\") {\n        global.spotifyDeviceID = state.deviceId;\n      }\n\n      if (state.type === \"track_update\" | state.type === \"player_update\") {\n        this.setState({\n          sessionQueue: global.sessionQueue\n        });\n      }\n\n      if (state.type === \"player_update\" & !state.isPlaying & global.currentlyPlaying[0] === \"Spotify\") {\n        global.isContentPlaying = false;\n        this.setState({\n          isContentPlaying: false\n        });\n      }\n\n      if (state.type === \"player_update\" & state.isPlaying) {\n        global.isContentPlaying = true;\n        this.setState({\n          isContentPlaying: true\n        });\n      } // Don't need this right now, displays error when first logging in\n      // But if player stops working, need notification\n      // if (state.errorType === \"authentication_error\") {\n      //   this.createNotification(\"error\");\n      // }\n\n\n      if (state.isPlaying & state.position === 0) {\n        global.currentContentPosition = 0;\n        this.setState({\n          isContentPlaying: true\n        });\n      }\n    };\n\n    this.timer = null;\n\n    this.durationCounter = () => {\n      this.timer = setInterval(async () => {\n        if (global.isContentPlaying) {\n          // console.log(global.currentContentPosition);\n          this.setState({\n            currentContentPosition: global.currentContentPosition,\n            isContentPlaying: true\n          });\n          global.currentContentPosition += 1;\n        }\n      }, 1000);\n    };\n\n    this.startTimer = () => {\n      console.log(\"starting duration timer\");\n      this.durationCounter();\n    };\n\n    this.spotifyLogin = () => {\n      console.log(\"spotifyAccessToken\", global.spotifyAccessToken);\n      this.setState({\n        spotifyAccessToken: global.spotifyAccessToken\n      });\n    };\n\n    this.updateSessionQueue = newQueue => {\n      this.setState({\n        sessionQueue: newQueue\n      });\n    };\n\n    this.loadYTVideo = videoId => {\n      this.state.youtubePlayer.loadVideoById(videoId, 0);\n    };\n\n    this._onReady = event => {\n      // access to player in all event handlers via event.target\n      global.youtubePlayer = event.target;\n      this.setState({\n        youtubePlayer: event.target\n      });\n    };\n\n    this._onVideoEnd = event => {\n      global.isContentPlaying = false;\n      global.skipSong();\n      this.updateSessionQueue(global.sessionQueue);\n    };\n\n    this.state = {\n      sessionQueue: global.sessionQueue,\n      currentlyPlaying: global.currentlyPlaying,\n      isContentPlaying: global.isContentPlaying,\n      updateSessionQueue: this.updateSessionQueue,\n      spotifyAccessToken: global.spotifyAccessToken,\n      youtubePlayer: \"\",\n      loadYTVideo: this.loadYTVideo,\n      currentContentPosition: global.currentContentPosition,\n      lastOrientationNotification: ''\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.background = \"#252525\";\n  }\n\n  render() {\n    const {\n      loading,\n      isAuthenticated\n    } = this.context;\n    const opts = {\n      height: \"0\",\n      width: \"0\",\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 0,\n        controls: 1\n      }\n    };\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    if (!global.timerStarted) {\n      this.startTimer();\n      global.timerStarted = true;\n    }\n\n    const handleResize = () => {\n      var width = window.innerWidth > 0 ? window.innerWidth : window.screen.width;\n      var height = window.innerHeight > 0 ? window.innerHeight : window.screen.height;\n\n      if (height < 540 & width > height) {\n        this.createNotification('mobileOrientation');\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      options: HTML5toTouch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SessionContext.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      render: ({\n        location,\n        history\n      }) => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MediaQuery, {\n        query: \"(min-device-width: 1025px)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }, isAuthenticated && /*#__PURE__*/React.createElement(SideNav, {\n        className: \"sidenav\",\n        onSelect: selected => {\n          const to = \"/\" + selected;\n\n          if (location.pathname !== to) {\n            history.push(to);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SideNav.Toggle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(SideNav.Nav, {\n        defaultSelected: history.location.pathname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        eventKey: \"Session\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-fw fa-play-circle\",\n        style: {\n          fontSize: \"1.75em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(NavText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 27\n        }\n      }, \"Session\")), /*#__PURE__*/React.createElement(NavItem, {\n        eventKey: \"Search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-fw fa-search\",\n        style: {\n          fontSize: \"1.75em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(NavText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 27\n        }\n      }, \"Search\")), /*#__PURE__*/React.createElement(NavItem, {\n        eventKey: \"Library\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-fw fa-book\",\n        style: {\n          fontSize: \"1.75em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(NavText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 27\n        }\n      }, \"Library\")), /*#__PURE__*/React.createElement(NavItem, {\n        eventKey: \"Accounts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NavIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-fw fa-user-circle\",\n        style: {\n          fontSize: \"1.75em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(NavText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 27\n        }\n      }, \"Music Profiles\"))))), /*#__PURE__*/React.createElement(MediaQuery, {\n        query: \"(max-device-width: 1024px)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(BottomNavBar, {\n        onBottomTabSelect: tab => {\n          const to = \"/\" + tab;\n\n          if (location.pathname !== to) {\n            history.push(to);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 19\n        }\n      })), isAuthenticated && /*#__PURE__*/React.createElement(SpotifyPlayer, {\n        token: this.state.spotifyAccessToken // uris={[]}\n        // autoPlay={true}\n        ,\n        play: true,\n        callback: state => this.checkPlayerStatus(state),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(YouTube, {\n        className: \"YoutubePlayer\",\n        videoId: \"7f6K1U6lH5Q\",\n        opts: opts,\n        onReady: this._onReady,\n        onEnd: this._onVideoEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(NotificationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"main\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Session\",\n        component: Session,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Search\",\n        component: Search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Library\",\n        component: Library,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }\n      }), !isAuthenticated && /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Welcome\",\n        component: Welcome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Accounts\",\n        render: props => /*#__PURE__*/React.createElement(Accounts, Object.assign({}, props, {\n          spotifyLogin: this.spotifyLogin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/signUp\",\n        component: SignUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/404\",\n        component: NotFoundPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }\n      }), isAuthenticated && /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Session\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 41\n        }\n      }), !isAuthenticated && /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Welcome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 42\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nApp.contextType = Auth0Context;\nexport default App;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/App.js"],"names":["React","Component","Session","Search","Library","Welcome","SignUp","Accounts","NotFoundPage","BottomNavBar","BrowserRouter","Router","Route","Switch","Redirect","NotificationContainer","NotificationManager","SideNav","NavItem","NavIcon","NavText","MediaQuery","DndProvider","HTML5toTouch","Auth0Context","SpotifyPlayer","SessionContext","createBottomTabNavigator","YouTube","Tab","App","createNotification","type","console","log","info","success","currTime","Date","state","lastOrientationNotification","warning","setState","getTime","error","checkPlayerStatus","deviceId","global","spotifyDeviceID","sessionQueue","isPlaying","currentlyPlaying","isContentPlaying","position","currentContentPosition","timer","durationCounter","setInterval","startTimer","spotifyLogin","spotifyAccessToken","updateSessionQueue","newQueue","loadYTVideo","videoId","youtubePlayer","loadVideoById","_onReady","event","target","_onVideoEnd","skipSong","componentDidMount","document","body","style","background","render","loading","isAuthenticated","context","opts","height","width","playerVars","autoplay","controls","timerStarted","handleResize","window","innerWidth","screen","innerHeight","addEventListener","location","history","selected","to","pathname","push","fontSize","tab","props","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Session from \"./pages/session\";\nimport Search from \"./pages/search\";\nimport Library from \"./pages/library\";\nimport Welcome from \"./pages/welcome\";\nimport SignUp from \"./pages/signUp\";\nimport Accounts from \"./pages/accounts\";\n\nimport NotFoundPage from \"./pages/404\";\n\nimport BottomNavBar from \"./components/bottomNavBar\";\n\n//Import all needed Component for this tutorial\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\n// Import Notifications\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\n// Side Nav imports\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\n\n// Be sure to include styles at some point, probably during your bootstraping\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\n\nimport \"font-awesome/css/font-awesome.min.css\";\n\nimport MediaQuery from \"react-responsive\";\n\nimport { DndProvider } from 'react-dnd-multi-backend';\nimport HTML5toTouch from 'react-dnd-multi-backend/dist/esm/HTML5toTouch';\n\n// Import Auth0Context instead of useAuth0\nimport { Auth0Context } from \"./react-auth0-spa\";\n\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nimport { SessionContext } from \"./session-context\";\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n// import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport YouTube from \"react-youtube\";\n\nconst Tab = createBottomTabNavigator();\n\nclass App extends Component {\n  componentDidMount() {\n    document.body.style.background = \"#252525\";\n  }\n\n\n  createNotification = (type) => {\n    console.log(\"GOT TO CREATE NOTIFICATION\");\n    switch (type) {\n      case \"info\":\n        NotificationManager.info(\"Info message\");\n        break;\n      case \"success\":\n        NotificationManager.success(\n          \"I knew you could do it.\",\n          \"Song added to queue\",\n          1500\n        );\n        break;\n      case \"mobileOrientation\":\n        // Check when last orientation notification was, if in last two mintues then don't display new one\n        var currTime = new Date()\n        if (this.state.lastOrientationNotification === '') {\n          NotificationManager.warning(\n            \"Please Rotate Device to Portrait\",\n            \"Attention:\",\n            3000\n          );\n          this.setState({lastOrientationNotification: new Date()})\n        } else if (((currTime.getTime() - this.state.lastOrientationNotification.getTime()) > 30000)){\n          NotificationManager.warning(\n            \"Please Rotate Device to Portrait\",\n            \"Attention:\",\n            3000\n          );\n          this.setState({lastOrientationNotification: new Date()})\n        }\n        \n        break;\n      case \"warning\":\n        NotificationManager.warning(\n          \"Warning message\",\n          \"Close after 3000ms\",\n          3000\n        );\n        break;\n      case \"error\":\n        NotificationManager.error(\n          \"Make sure you are logged into your Spotify.\",\n          \"Error!\",\n          5000,\n          () => {\n            //alert(\"callback\");\n          }\n        );\n        break;\n      default:\n        console.log(\"Not a known notification\")\n        break;\n    }\n    return () => {};\n  };\n\n  checkPlayerStatus = (state) => {\n    console.log(\"Player Status: \", state);\n\n    if (state.deviceId !== \"\") {\n      global.spotifyDeviceID = state.deviceId;\n    }\n\n    if ((state.type === \"track_update\") | (state.type === \"player_update\")) {\n      this.setState({ sessionQueue: global.sessionQueue });\n    }\n\n    if (\n      (state.type === \"player_update\") &\n      !state.isPlaying &\n      (global.currentlyPlaying[0] === \"Spotify\")\n    ) {\n      global.isContentPlaying = false;\n      this.setState({ isContentPlaying: false });\n    }\n\n    if ((state.type === \"player_update\") & state.isPlaying) {\n      global.isContentPlaying = true;\n      this.setState({ isContentPlaying: true });\n    }\n\n    // Don't need this right now, displays error when first logging in\n    // But if player stops working, need notification\n    // if (state.errorType === \"authentication_error\") {\n    //   this.createNotification(\"error\");\n    // }\n\n    if (state.isPlaying & state.position === 0) {\n      global.currentContentPosition = 0;\n      this.setState({ isContentPlaying: true });\n    }\n\n    \n  };\n\n  timer = null;\n\n  durationCounter = () => {\n\n    this.timer = setInterval(async () => {\n      if (global.isContentPlaying) {  \n          \n          // console.log(global.currentContentPosition);\n          this.setState({ currentContentPosition: global.currentContentPosition, isContentPlaying: true });\n          global.currentContentPosition += 1;\n          \n          \n      }\n      \n    }, 1000);\n  };\n\n  startTimer = () => {\n    console.log(\"starting duration timer\" )\n    this.durationCounter();\n  }\n\n  spotifyLogin = () => {\n    console.log(\"spotifyAccessToken\", global.spotifyAccessToken);\n\n    this.setState({\n      spotifyAccessToken: global.spotifyAccessToken,\n    });\n  };\n\n  static contextType = Auth0Context;\n\n  // Set up Context environment\n  updateSessionQueue = (newQueue) => {\n    this.setState({ sessionQueue: newQueue });\n  };\n\n  // YouTube functions\n  loadYTVideo = (videoId) => {\n    this.state.youtubePlayer.loadVideoById(videoId, 0);\n  };\n\n  _onReady = (event) => {\n    // access to player in all event handlers via event.target\n    global.youtubePlayer = event.target;\n    this.setState({ youtubePlayer: event.target });\n  };\n\n  _onVideoEnd = (event) => {\n    global.isContentPlaying = false;\n    global.skipSong();\n    this.updateSessionQueue(global.sessionQueue);\n  };\n\n  state = {\n    sessionQueue: global.sessionQueue,\n    currentlyPlaying: global.currentlyPlaying,\n    isContentPlaying: global.isContentPlaying,\n    updateSessionQueue: this.updateSessionQueue,\n    spotifyAccessToken: global.spotifyAccessToken,\n    youtubePlayer: \"\",\n    loadYTVideo: this.loadYTVideo,\n    currentContentPosition: global.currentContentPosition,\n    lastOrientationNotification: ''\n  };\n\n\n\n  render() {\n    const { loading, isAuthenticated } = this.context;\n\n    const opts = {\n      height: \"0\",\n      width: \"0\",\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 0,\n        controls: 1,\n      },\n    };\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (!global.timerStarted) {\n      this.startTimer();\n      global.timerStarted = true;\n    }\n\n\n\n    const handleResize = () => {\n      var width = (window.innerWidth > 0) ? window.innerWidth : window.screen.width;\n      var height = (window.innerHeight > 0) ? window.innerHeight : window.screen.height;\n      if (height < 540 & width > height ) {\n        this.createNotification('mobileOrientation')\n      }\n    }\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return (\n      <DndProvider options={HTML5toTouch}>\n      <SessionContext.Provider value={this.state}>\n        <Router>\n          <Route\n            render={({ location, history }) => (\n              <React.Fragment>\n                <MediaQuery query=\"(min-device-width: 1025px)\">\n                  {isAuthenticated && (\n                    <SideNav\n                      className=\"sidenav\"\n                      onSelect={(selected) => {\n                        const to = \"/\" + selected;\n                        if (location.pathname !== to) {\n                          history.push(to);\n                        }\n                      }}>\n                      <SideNav.Toggle />\n                      <SideNav.Nav defaultSelected={history.location.pathname}>\n                        <NavItem eventKey=\"Session\">\n                          <NavIcon>\n                            <i\n                              className=\"fa fa-fw fa-play-circle\"\n                              style={{ fontSize: \"1.75em\" }}\n                            />\n                          </NavIcon>\n                          <NavText>Session</NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"Search\">\n                          <NavIcon>\n                            <i\n                              className=\"fa fa-fw fa-search\"\n                              style={{ fontSize: \"1.75em\" }}\n                            />\n                          </NavIcon>\n                          <NavText>Search</NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"Library\">\n                          <NavIcon>\n                            <i\n                              className=\"fa fa-fw fa-book\"\n                              style={{ fontSize: \"1.75em\" }}\n                            />\n                          </NavIcon>\n                          <NavText>Library</NavText>\n                        </NavItem>\n\n                        <NavItem eventKey=\"Accounts\">\n                          <NavIcon>\n                            <i\n                              className=\"fa fa-fw fa-user-circle\"\n                              style={{ fontSize: \"1.75em\" }}\n                            />\n                          </NavIcon>\n                          <NavText>Music Profiles</NavText>\n                        </NavItem>\n                      </SideNav.Nav>\n                    </SideNav>\n                  )}\n                </MediaQuery>\n\n                <MediaQuery query=\"(max-device-width: 1024px)\">\n                  <BottomNavBar onBottomTabSelect={(tab) => {\n                        const to = \"/\" + tab;\n                        if (location.pathname !== to) {\n                          history.push(to);\n                        }}}></BottomNavBar>\n                </MediaQuery>\n                {/* {isAuthenticated && (\n                  <SideNav\n                    className=\"sidenav\"\n                    onSelect={(selected) => {\n                      const to = \"/\" + selected;\n                      if (location.pathname !== to) {\n                        history.push(to);\n                      }\n                    }}>\n                    <SideNav.Toggle />\n                    <SideNav.Nav defaultSelected={history.location.pathname}>\n                      <NavItem eventKey=\"Session\">\n                        <NavIcon>\n                          <i\n                            className=\"fa fa-fw fa-play-circle\"\n                            style={{ fontSize: \"1.75em\" }}\n                          />\n                        </NavIcon>\n                        <NavText>Session</NavText>\n                      </NavItem>\n                      <NavItem eventKey=\"Search\">\n                        <NavIcon>\n                          <i\n                            className=\"fa fa-fw fa-search\"\n                            style={{ fontSize: \"1.75em\" }}\n                          />\n                        </NavIcon>\n                        <NavText>Search</NavText>\n                      </NavItem>\n                      <NavItem eventKey=\"Library\">\n                        <NavIcon>\n                          <i\n                            className=\"fa fa-fw fa-book\"\n                            style={{ fontSize: \"1.75em\" }}\n                          />\n                        </NavIcon>\n                        <NavText>Library</NavText>\n                      </NavItem>\n\n                      <NavItem eventKey=\"Accounts\">\n                        <NavIcon>\n                          <i\n                            className=\"fa fa-fw fa-user-circle\"\n                            style={{ fontSize: \"1.75em\" }}\n                          />\n                        </NavIcon>\n                        <NavText>Music Accounts</NavText>\n                      </NavItem>\n                    </SideNav.Nav>\n                  </SideNav>\n                )} */}\n                {isAuthenticated && (\n                  <SpotifyPlayer\n                    token={this.state.spotifyAccessToken}\n                    // uris={[]}\n                    // autoPlay={true}\n                    play={true}\n                    callback={(state) => this.checkPlayerStatus(state)}\n                  />\n                )}\n                <YouTube\n                  className=\"YoutubePlayer\"\n                  videoId=\"7f6K1U6lH5Q\"\n                  opts={opts}\n                  onReady={this._onReady}\n                  onEnd={this._onVideoEnd}\n                />\n                <NotificationContainer />\n                <main>\n                  <Switch>\n                    <Route exact path=\"/Session\" component={Session} />\n                    <Route exact path=\"/Search\" component={Search} />\n                    <Route exact path=\"/Library\" component={Library} />\n                    {!isAuthenticated && (\n                      <Route exact path=\"/Welcome\" component={Welcome} />\n                    )}\n\n                    <Route\n                      exact\n                      path=\"/Accounts\"\n                      render={(props) => (\n                        <Accounts {...props} spotifyLogin={this.spotifyLogin} />\n                      )}\n                    />\n                    <Route exact path=\"/signUp\" component={SignUp} />\n                    <Route exact path=\"/404\" component={NotFoundPage} />\n                    {isAuthenticated && <Redirect to=\"/Session\" />}\n                    {!isAuthenticated && <Redirect to=\"/Welcome\" />}\n                  </Switch>\n                </main>\n              </React.Fragment>\n            )}\n          />\n        </Router>\n      </SessionContext.Provider>\n      </DndProvider>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}