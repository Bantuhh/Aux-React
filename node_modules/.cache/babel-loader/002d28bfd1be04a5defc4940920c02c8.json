{"ast":null,"code":"var _jsxFileName = \"/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchWeb.jsx\";\nimport React, { Component } from \"react\";\nimport \"../../styles/SearchWeb.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport SearchResults from \"./searchResults\";\nimport SearchIcon from \"../../resources/images/SearchIcon.png\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SearchWeb extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.createNotification = type => {\n      return () => {\n        switch (type) {\n          case \"info\":\n            NotificationManager.info(\"Info message\");\n            break;\n\n          case \"success\":\n            NotificationManager.success(\"Success message\", \"Title here\");\n            break;\n\n          case \"warning\":\n            NotificationManager.warning(\"Warning message\", \"Close after 3000ms\", 3000);\n            break;\n\n          case \"error\":\n            NotificationManager.error(\"Error: Make sure you are logged into your Spotify\", \"Click me!\", 5000, () => {\n              alert(\"callback\");\n            });\n            break;\n        }\n      };\n    };\n\n    this.spotifySearchTrack = this.spotifySearchTrack.bind(this);\n    this.createNotification = this.handleOcreateNotificationrder.bind(this);\n  }\n\n  spotifySearchTrack() {\n    var query = document.getElementById(\"searchQuery\").value;\n    spotifyWebApi.searchTracks(query).then(response => {\n      console.log(response);\n    }, reason => {\n      this.createNotification(\"error\");\n      console.error(reason); // Error!\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"searchFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchMiddle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchQueryDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"searchIcon\",\n      src: SearchIcon,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"searchInputDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"searchQuery\",\n      placeholder: \"Search a song or artist..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"searchButtonDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"spotifySearchBtn\",\n      onClick: this.spotifySearchTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(SearchResults, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"searchRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchWeb;","map":{"version":3,"sources":["/Users/dbanta/Desktop/Aux React/aux-pwa/src/components/search/searchWeb.jsx"],"names":["React","Component","NotificationContainer","NotificationManager","SearchResults","SearchIcon","Spotify","spotifyWebApi","SearchWeb","constructor","props","state","createNotification","type","info","success","warning","error","alert","spotifySearchTrack","bind","handleOcreateNotificationrder","query","document","getElementById","value","searchTracks","then","response","console","log","reason","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"../../styles/SearchWeb.css\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nimport SearchResults from \"./searchResults\";\n\nimport SearchIcon from \"../../resources/images/SearchIcon.png\";\n\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass SearchWeb extends Component {\n  constructor(props) {\n    super(props);\n    this.spotifySearchTrack = this.spotifySearchTrack.bind(this);\n    this.createNotification = this.handleOcreateNotificationrder.bind(this);\n  }\n  state = {};\n\n  spotifySearchTrack() {\n    var query = document.getElementById(\"searchQuery\").value;\n    spotifyWebApi.searchTracks(query).then(\n      (response) => {\n        console.log(response);\n      },\n      (reason) => {\n        this.createNotification(\"error\");\n        console.error(reason); // Error!\n      }\n    );\n  }\n\n  createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(\"Info message\");\n          break;\n        case \"success\":\n          NotificationManager.success(\"Success message\", \"Title here\");\n          break;\n        case \"warning\":\n          NotificationManager.warning(\n            \"Warning message\",\n            \"Close after 3000ms\",\n            3000\n          );\n          break;\n        case \"error\":\n          NotificationManager.error(\n            \"Error: Make sure you are logged into your Spotify\",\n            \"Click me!\",\n            5000,\n            () => {\n              alert(\"callback\");\n            }\n          );\n          break;\n      }\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"searchFlex\">\n        <div className=\"searchMiddle\">\n          <div className=\"searchQueryDiv\">\n            <img className=\"searchIcon\" src={SearchIcon} alt=\"\"></img>\n            <div className=\"searchInputDiv\">\n              <input\n                type=\"text\"\n                id=\"searchQuery\"\n                placeholder=\"Search a song or artist..\"></input>\n            </div>\n            <div className=\"searchButtonDiv\">\n              <button\n                id=\"spotifySearchBtn\"\n                onClick={this.spotifySearchTrack}></button>\n            </div>\n          </div>\n          <SearchResults></SearchResults>\n        </div>\n        <div className=\"searchRight\"></div>\n      </div>\n    );\n  }\n}\n\nexport default SearchWeb;\n"]},"metadata":{},"sourceType":"module"}